{"version":3,"file":"static/js/315.a9aea3c6.chunk.js","mappings":"2LAOA,MAAMA,GAAgBC,EAAAA,EAAAA,GAAW,qCAG3BC,EAAoBC,IAAyC,IAAxC,WAAEC,EAAU,UAAEC,EAAS,QAAEC,GAASH,EAC3D,MAAMI,GAASC,EAAAA,EAAAA,aACTC,GAAWC,EAAAA,EAAAA,gBACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,OAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GAmC7C,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,qBAAqBG,QAASd,EAAQY,UACtDF,EAAAA,EAAAA,KAACK,EAAAA,IAAG,OAGNL,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,kBAAgBd,EAAWkB,QAAQ,OAEtCH,EAAAA,EAAAA,MAAA,QAAMI,SA3CSC,UAGnB,GAFAC,EAAMC,iBAEDnB,GAAWE,EAAhB,CAIAM,GAAc,GACdH,EAAS,MAET,IACE,MAAQD,MAAOgB,SAAsBpB,EAAOqB,eAAe,CACzDnB,WACAoB,cAAe,CACbC,WAAYC,OAAOC,SAASC,OAAS,YAEvCC,SAAU,gBAGZ,GAAIP,EAEF,YADAf,EAASe,EAAYQ,SAKvB9B,GACF,CAAE,MAAO+B,GACPxB,EAASwB,EAAID,QACf,CAAC,QACCpB,GAAc,EAChB,CAzBA,CAyBA,EAaiCG,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAACqB,EAAAA,YAAW,CACVC,QAAS,CACPC,MAAO,CACLC,KAAM,CACJC,SAAU,OACVC,MAAO,UACP,gBAAiB,CACfA,MAAO,YAGXC,QAAS,CACPD,MAAO,iBAOhB/B,IAASK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEP,KAE1CK,EAAAA,EAAAA,KAAA,UACE4B,KAAK,SACLC,UAAWtC,GAAUO,EACrBG,UAAU,qBAAoBC,SAE7BJ,EAAa,gBAAkB,QAAQV,EAAWkB,QAAQ,cAI7D,EAqbV,EAjboBwB,KAClB,MAAOC,IAAYlC,EAAAA,EAAAA,UAAS,CAC1B,CACEmC,GAAI,EACJC,KAAM,YACNC,MAAO,IACPC,MAAO,iEACPC,OAAQ,IACRC,QAAS,IACTC,YAAa,qEAEf,CACEN,GAAI,EACJC,KAAM,2BACNC,MAAO,KACPC,MAAO,uHACPC,OAAQ,IACRC,QAAS,GACTC,YAAa,6DAEZC,MAAM,IAAIC,OAAOC,KAAI,CAACC,EAAGC,KAAC,CAC3BX,GAAIW,EAAI,EACRV,KAAM,WAAWU,EAAI,IACrBT,MAAOU,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,IAC1CX,MAAO,wCAAwCQ,IAC/CP,QAAyB,EAAhBQ,KAAKE,SAAe,GAAGxC,QAAQ,GACxC+B,QAASO,KAAKC,MAAsB,IAAhBD,KAAKE,UACzBR,YAAa,8CAA8CK,EAAI,WAI5DI,EAAaC,IAAkBnD,EAAAA,EAAAA,UAAS,KACxCoD,EAAMC,IAAWrD,EAAAA,EAAAA,UAAS,KAC1BsD,EAAeC,IAAoBvD,EAAAA,EAAAA,UAAS,WAC5CwD,EAAWC,IAAgBzD,EAAAA,EAAAA,WAAS,IACpCF,IAASE,EAAAA,EAAAA,UAAS,KAClB0D,EAAeC,IAAoB3D,EAAAA,EAAAA,UAAS,KAC5C4D,EAAUC,IAAe7D,EAAAA,EAAAA,WAAS,IAClC8D,EAAiBC,IAAsB/D,EAAAA,EAAAA,UAAS,OAChDgE,EAAaC,IAAkBjE,EAAAA,EAAAA,UAAS,CAAC,EAAG,OAC5CkE,EAAYC,IAAiBnE,EAAAA,EAAAA,UAAS,YACtCoE,EAAiBC,IAAsBrE,EAAAA,EAAAA,WAAS,IAChDsE,EAAgBC,IAAqBvE,EAAAA,EAAAA,WAAS,GAE/CwE,EAAmBtC,EACtBuC,QAAOC,GACNA,EAAQtC,KAAKuC,cAAcC,SAAS1B,EAAYyB,gBAChDD,EAAQrC,OAAS2B,EAAY,IAC7BU,EAAQrC,OAAS2B,EAAY,KAE9Ba,MAAK,CAACC,EAAGC,KACR,OAAOb,GACL,IAAK,YAAa,OAAOY,EAAEzC,MAAQ0C,EAAE1C,MACrC,IAAK,aAAc,OAAO0C,EAAE1C,MAAQyC,EAAEzC,MACtC,IAAK,SAAU,OAAO0C,EAAExC,OAASuC,EAAEvC,OACnC,QAAS,OAAO,EAClB,IAGEhD,EAAa6D,EAAK4B,QAAO,CAACC,EAAOC,IAASD,EAAQC,EAAK7C,MAAQ6C,EAAKC,UAAU,GAC9EC,EAAgBhC,EAAK4B,QAAO,CAACK,EAAOH,IAASG,EAAQH,EAAKC,UAAU,GAEpEG,EAAaZ,IACjBrB,GAAQkC,GACgBA,EAASC,MAAKN,GAAQA,EAAK/C,KAAOuC,EAAQvC,KAEvDoD,EAAS3C,KAAIsC,GAClBA,EAAK/C,KAAOuC,EAAQvC,GAAK,IAAK+C,EAAMC,SAAUD,EAAKC,SAAW,GAAMD,IAGjE,IAAIK,EAAU,IAAKb,EAASS,SAAU,KAC7C,EAGEM,EAAiB,SAACC,GAAkC,IAAvBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1CvC,GAAQkC,IACN,GAAII,EACF,OAAOJ,EAASd,QAAOS,GAAQA,EAAK/C,KAAOuD,IAG7C,MAAMK,EAAgBR,EAASC,MAAKN,GAAQA,EAAK/C,KAAOuD,IACxD,OAAiB,OAAbK,QAAa,IAAbA,OAAa,EAAbA,EAAeZ,UAAW,EACrBI,EAAS3C,KAAIsC,GAClBA,EAAK/C,KAAOuD,EAAY,IAAKR,EAAMC,SAAUD,EAAKC,SAAW,GAAMD,IAGhEK,EAASd,QAAOS,GAAQA,EAAK/C,KAAOuD,GAAU,GAEzD,EA2BMM,EAAezD,IACnB,MAAM0D,EAAQ,GACRC,EAAYnD,KAAKC,MAAMT,GACvB4D,EAAc5D,EAAS,GAAK,GAElC,IAAK,IAAIO,EAAI,EAAGA,GAAK,EAAGA,IAClBA,GAAKoD,EACPD,EAAMG,MAAKjG,EAAAA,EAAAA,KAACkG,EAAAA,IAAM,CAASjG,UAAU,eAAb0C,IACfA,IAAMoD,EAAY,GAAKC,EAChCF,EAAMG,MAAKjG,EAAAA,EAAAA,KAACmG,EAAAA,IAAa,CAASlG,UAAU,oBAAb0C,IAE/BmD,EAAMG,MAAKjG,EAAAA,EAAAA,KAACoG,EAAAA,IAAS,CAASnG,UAAU,QAAb0C,IAI/B,OAAOmD,CAAK,EAGd,OACE9F,EAAAA,EAAAA,KAACqG,EAAAA,SAAQ,CAAC9G,OAAQP,EAAckB,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAE5BC,EAAAA,EAAAA,MAAA,UAAQF,UAAU,aAAYC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,SAAC,cAEtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAACsG,EAAAA,IAAQ,CAACrG,UAAU,iBACpBD,EAAAA,EAAAA,KAAA,SACE4B,KAAK,OACL2E,YAAY,qBACZC,MAAOzD,EACP0D,SAAWC,GAAM1D,EAAe0D,EAAEC,OAAOH,aAI7CrG,EAAAA,EAAAA,MAAA,UAAQF,UAAU,gBAAgBG,QAASA,IAAMsD,GAAaD,GAAUvD,SAAA,EACtEF,EAAAA,EAAAA,KAAC4G,EAAAA,IAAc,IACd3B,EAAgB,IAAKjF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAE+E,WAKxD9E,EAAAA,EAAAA,MAAA,QAAMF,UAAU,eAAcC,SAAA,EAE5BC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,kBAAiBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aAEJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAE2D,EAAY,OACpB7D,EAAAA,EAAAA,KAAA,SACE4B,KAAK,QACLiF,IAAI,IACJC,IAAI,OACJN,MAAO3C,EAAY,GACnB4C,SAAWC,GAAM5C,EAAe,CAACD,EAAY,GAAIkD,SAASL,EAAEC,OAAOH,YAErErG,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAE2D,EAAY,aAIxB1D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJC,EAAAA,EAAAA,MAAA,UACEqG,MAAOzC,EACP0C,SAAWC,GAAM1C,EAAc0C,EAAEC,OAAOH,OACxCvG,UAAU,cAAaC,SAAA,EAEvBF,EAAAA,EAAAA,KAAA,UAAQwG,MAAM,UAAStG,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQwG,MAAM,YAAWtG,SAAC,wBAC1BF,EAAAA,EAAAA,KAAA,UAAQwG,MAAM,aAAYtG,SAAC,wBAC3BF,EAAAA,EAAAA,KAAA,UAAQwG,MAAM,SAAQtG,SAAC,2BAI3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,MAAA,SAAOF,UAAW,mBAAoC,WAAlBkD,EAA6B,SAAW,IAAKjD,SAAA,EAC/EF,EAAAA,EAAAA,KAAA,SACE4B,KAAK,QACL4E,MAAM,SACNQ,QAA2B,WAAlB7D,EACTsD,SAAUA,IAAMrD,EAAiB,aAEnCpD,EAAAA,EAAAA,KAACiH,EAAAA,IAAY,IAAG,mBAGlB9G,EAAAA,EAAAA,MAAA,SAAOF,UAAW,mBAAoC,UAAlBkD,EAA4B,SAAW,IAAKjD,SAAA,EAC9EF,EAAAA,EAAAA,KAAA,SACE4B,KAAK,QACL4E,MAAM,QACNQ,QAA2B,UAAlB7D,EACTsD,SAAUA,IAAMrD,EAAiB,YAEnCpD,EAAAA,EAAAA,KAACkH,EAAAA,IAAY,IAAG,6BAOxBlH,EAAAA,EAAAA,KAAA,WAASC,UAAU,eAAcC,SACF,IAA5BmE,EAAiBqB,QAChBvF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAACK,EAAAA,IAAG,CAAC8G,KAAM,MACXnH,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4CAGLmE,EAAiB5B,KAAI8B,IACnBpE,EAAAA,EAAAA,MAAA,OAAsBF,UAAU,eAAeG,QAASA,IAAMwD,EAAmBW,GAASrE,SAAA,EACxFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKoH,IAAK7C,EAAQpC,MAAOkF,IAAK9C,EAAQtC,OACrCsC,EAAQrC,MAAQ,MACflC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,gBAIpCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKqE,EAAQtC,QACb9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,CAAC,IAAEqE,EAAQrC,MAAMoF,qBAEvCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,CACpB2F,EAAYtB,EAAQnC,SACrBjC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAEqE,EAAQlC,QAAQ,WAG1BrC,EAAAA,EAAAA,KAAA,UACEI,QAAUsG,IACRA,EAAEa,kBACFpC,EAAUZ,EAAQ,EAEpBtE,UAAU,kBAAiBC,SAC5B,qBAvBKqE,EAAQvC,WAkCzByB,IACCzD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eACJF,EAAAA,EAAAA,KAAA,UAAQI,QAASA,IAAMsD,GAAY,GAAQzD,UAAU,aAAYC,UAC/DF,EAAAA,EAAAA,KAACK,EAAAA,IAAG,SAIS,IAAhB4C,EAAKyC,QACJvF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAC4G,EAAAA,IAAc,CAACO,KAAM,MACtBnH,EAAAA,EAAAA,KAAA,KAAAE,SAAG,wBACHF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMsD,GAAY,GAC3BzD,UAAU,wBAAuBC,SAClC,0BAKHC,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAAtH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SACxB+C,EAAKR,KAAIsC,IACR5E,EAAAA,EAAAA,MAAA,OAAmBF,UAAU,YAAWC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKoH,IAAKrC,EAAK5C,MAAOkF,IAAKtC,EAAK9C,QAEhC9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAK6E,EAAK9C,QACV9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,CAAC,IAAE6E,EAAK7C,MAAMoF,qBAEpCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMkF,EAAeP,EAAK/C,IACnC/B,UAAU,eAAcC,SACzB,OAGDF,EAAAA,EAAAA,KAAA,QAAAE,SAAO6E,EAAKC,YACZhF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAM+E,EAAUJ,GACzB9E,UAAU,eAAcC,SACzB,aAMLF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMkF,EAAeP,EAAK/C,IAAI,GACvC/B,UAAU,kBAAiBC,UAE3BF,EAAAA,EAAAA,KAACK,EAAAA,IAAG,QA5BE0E,EAAK/C,SAkCnB7B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAEd,EAAWkB,QAAQ,UAE7BH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAERC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WACNC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,IAAEd,EAAWkB,QAAQ,UAG7BN,EAAAA,EAAAA,KAAA,UACEI,QAA2B,WAAlB+C,EArPAsE,KAC3BvD,GAAmB,GACnBE,GAAkB,EAAM,EAcCsD,KACzBpE,GAAa,GACbqE,YAAW,KACTnE,EAAiB,mDACjBN,EAAQ,IACRI,GAAa,EAAM,GAClB,IAAK,EAgOUzB,SAAUwB,EACVpD,UAAU,eAAcC,SAEvBmD,EAAY,gBAAkB,wBAGhC1D,IAASK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAEP,IACzC4D,IACCpD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAO,IAAG,IAAErE,gBAW5BI,IACC3D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,UACEI,QAASA,IAAMwD,EAAmB,MAClC3D,UAAU,cAAaC,UAEvBF,EAAAA,EAAAA,KAACK,EAAAA,IAAG,OAGNF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKoH,IAAKzD,EAAgBxB,MAAOkF,IAAK1D,EAAgB1B,UAGxD9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKyD,EAAgB1B,QAErB9B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOC,SAAA,CAAC,IAAEyD,EAAgBzB,MAAMoF,qBAE/CnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,CACpB2F,EAAYlC,EAAgBvB,SAC7BjC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAOyD,EAAgBvB,OAAO,KAAGuB,EAAgBtB,QAAQ,mBAG3DrC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAaC,SAAEyD,EAAgBrB,eAE5CnC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,UACEI,QAASA,KACP+E,EAAUxB,GACVC,EAAmB,MACnBF,GAAY,EAAK,EAEnBzD,UAAU,kBAAiBC,SAC5B,iBAIDF,EAAAA,EAAAA,KAAA,UACEI,QAASA,KACP+E,EAAUxB,GACVC,EAAmB,MACnBF,GAAY,EAAK,EAEnBzD,UAAU,cAAaC,SACxB,0BAWZiE,IACChE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAO,CAAC3H,UAAU,kBACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uDAKT+D,IACCjE,EAAAA,EAAAA,KAACd,EAAiB,CAChBE,WAAYA,EACZC,UAzUmBwI,KAC3BzD,GAAkB,GAClBF,GAAmB,GACnBhB,EAAQ,IACRM,EAAiB,mDAEjBmE,YAAW,KACTvD,GAAkB,EAAM,GACvB,IAAK,EAkUA9E,QAASA,IAAM4E,GAAmB,SAI/B,C","sources":["components/ecommerce/ProductPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { FiShoppingCart, FiSearch, FiX, FiCheck, FiCreditCard, FiDollarSign } from 'react-icons/fi';\r\nimport { FaStar, FaRegStar, FaStarHalfAlt } from 'react-icons/fa';\r\nimport './ECommerce.css';\r\n\r\nconst stripePromise = loadStripe('pk_test_your_publishable_key_here');\r\n\r\n// Stripe Payment Form Component\r\nconst StripePaymentForm = ({ totalPrice, onSuccess, onClose }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const { error: stripeError } = await stripe.confirmPayment({\r\n        elements,\r\n        confirmParams: {\r\n          return_url: window.location.origin + '/success',\r\n        },\r\n        redirect: 'if_required'\r\n      });\r\n\r\n      if (stripeError) {\r\n        setError(stripeError.message);\r\n        return;\r\n      }\r\n\r\n      // If we get here, payment was successful\r\n      onSuccess();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-modal\">\r\n      <div className=\"payment-form-container\">\r\n        <button className=\"close-payment-form\" onClick={onClose}>\r\n          <FiX />\r\n        </button>\r\n        \r\n        <h3>Enter Payment Details</h3>\r\n        <p>Total Amount: ${totalPrice.toFixed(2)}</p>\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"card-element-container\">\r\n            <CardElement \r\n              options={{\r\n                style: {\r\n                  base: {\r\n                    fontSize: '16px',\r\n                    color: '#424770',\r\n                    '::placeholder': {\r\n                      color: '#aab7c4',\r\n                    },\r\n                  },\r\n                  invalid: {\r\n                    color: '#9e2146',\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          {error && <div className=\"payment-error\">{error}</div>}\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            disabled={!stripe || processing}\r\n            className=\"submit-payment-btn\"\r\n          >\r\n            {processing ? 'Processing...' : `Pay $${totalPrice.toFixed(2)}`}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductPage = () => {\r\n  const [products] = useState([\r\n    { \r\n      id: 1, \r\n      name: 'iPhone 13', \r\n      price: 799, \r\n      image: 'https://m.media-amazon.com/images/I/51kVvsTzVhL._AC_SX679_.jpg',\r\n      rating: 4.5,\r\n      reviews: 128,\r\n      description: 'The latest iPhone with A15 Bionic chip and advanced camera system'\r\n    },\r\n    { \r\n      id: 2, \r\n      name: 'Samsung Galaxy S24 Ultra', \r\n      price: 1199, \r\n      image: 'https://helios-i.mashable.com/imagery/articles/05dlTp4hFqQv1HZE19rSRE2/hero-image.fill.size_1248x702.v1695053686.jpg',\r\n      rating: 4.8,\r\n      reviews: 95,\r\n      description: 'Premium Android smartphone with S Pen and 200MP camera'\r\n    },\r\n    ...Array(10).fill().map((_, i) => ({\r\n      id: i + 3,\r\n      name: `Product ${i + 3}`,\r\n      price: Math.floor(Math.random() * 1000) + 100,\r\n      image: `https://picsum.photos/300/200?random=${i}`,\r\n      rating: (Math.random() * 2 + 3).toFixed(1),\r\n      reviews: Math.floor(Math.random() * 200),\r\n      description: `High-quality product with premium features ${i + 1}`\r\n    }))\r\n  ]);\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [cart, setCart] = useState([]);\r\n  const [paymentMethod, setPaymentMethod] = useState('stripe');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error] = useState('');\r\n  const [paymentStatus, setPaymentStatus] = useState('');\r\n  const [showCart, setShowCart] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [filterPrice, setFilterPrice] = useState([0, 2000]);\r\n  const [sortOption, setSortOption] = useState('default');\r\n  const [showPaymentForm, setShowPaymentForm] = useState(false);\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n\r\n  const filteredProducts = products\r\n    .filter(product => \r\n      product.name.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n      product.price >= filterPrice[0] && \r\n      product.price <= filterPrice[1]\r\n    )\r\n    .sort((a, b) => {\r\n      switch(sortOption) {\r\n        case 'price-low': return a.price - b.price;\r\n        case 'price-high': return b.price - a.price;\r\n        case 'rating': return b.rating - a.rating;\r\n        default: return 0;\r\n      }\r\n    });\r\n\r\n  const totalPrice = cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n  const cartItemCount = cart.reduce((count, item) => count + item.quantity, 0);\r\n\r\n  const addToCart = (product) => {\r\n    setCart(prevCart => {\r\n      const productInCart = prevCart.find(item => item.id === product.id);\r\n      if (productInCart) {\r\n        return prevCart.map(item =>\r\n          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\r\n        );\r\n      }\r\n      return [...prevCart, { ...product, quantity: 1 }];\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (productId, removeAll = false) => {\r\n    setCart(prevCart => {\r\n      if (removeAll) {\r\n        return prevCart.filter(item => item.id !== productId);\r\n      }\r\n      \r\n      const productInCart = prevCart.find(item => item.id === productId);\r\n      if (productInCart?.quantity > 1) {\r\n        return prevCart.map(item =>\r\n          item.id === productId ? { ...item, quantity: item.quantity - 1 } : item\r\n        );\r\n      }\r\n      return prevCart.filter(item => item.id !== productId);\r\n    });\r\n  };\r\n\r\n  const handleStripeCheckout = () => {\r\n    setShowPaymentForm(true);\r\n    setPaymentSuccess(false);\r\n  };\r\n\r\n  const handlePaymentSuccess = () => {\r\n    setPaymentSuccess(true);\r\n    setShowPaymentForm(false);\r\n    setCart([]);\r\n    setPaymentStatus('Payment Successful! Your order has been placed.');\r\n    \r\n    setTimeout(() => {\r\n      setPaymentSuccess(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleDummyPayment = () => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setPaymentStatus('Payment Successful! Your order has been placed.');\r\n      setCart([]);\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const renderStars = (rating) => {\r\n    const stars = [];\r\n    const fullStars = Math.floor(rating);\r\n    const hasHalfStar = rating % 1 >= 0.5;\r\n    \r\n    for (let i = 1; i <= 5; i++) {\r\n      if (i <= fullStars) {\r\n        stars.push(<FaStar key={i} className=\"star filled\" />);\r\n      } else if (i === fullStars + 1 && hasHalfStar) {\r\n        stars.push(<FaStarHalfAlt key={i} className=\"star half-filled\" />);\r\n      } else {\r\n        stars.push(<FaRegStar key={i} className=\"star\" />);\r\n      }\r\n    }\r\n    \r\n    return stars;\r\n  };\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <div className=\"ecommerce-app\">\r\n        {/* Header */}\r\n        <header className=\"app-header\">\r\n          <div className=\"logo\">TechShop</div>\r\n          \r\n          <div className=\"search-container\">\r\n            <FiSearch className=\"search-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search products...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <button className=\"cart-icon-btn\" onClick={() => setShowCart(!showCart)}>\r\n            <FiShoppingCart />\r\n            {cartItemCount > 0 && <span className=\"cart-badge\">{cartItemCount}</span>}\r\n          </button>\r\n        </header>\r\n\r\n        {/* Main Content */}\r\n        <main className=\"main-content\">\r\n          {/* Filters Sidebar */}\r\n          <aside className=\"filters-sidebar\">\r\n            <h3>Filters</h3>\r\n            \r\n            <div className=\"filter-section\">\r\n              <h4>Price Range</h4>\r\n              <div className=\"price-range\">\r\n                <span>${filterPrice[0]}</span>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"2000\"\r\n                  value={filterPrice[1]}\r\n                  onChange={(e) => setFilterPrice([filterPrice[0], parseInt(e.target.value)])}\r\n                />\r\n                <span>${filterPrice[1]}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"filter-section\">\r\n              <h4>Sort By</h4>\r\n              <select \r\n                value={sortOption} \r\n                onChange={(e) => setSortOption(e.target.value)}\r\n                className=\"sort-select\"\r\n              >\r\n                <option value=\"default\">Default</option>\r\n                <option value=\"price-low\">Price: Low to High</option>\r\n                <option value=\"price-high\">Price: High to Low</option>\r\n                <option value=\"rating\">Customer Rating</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div className=\"filter-section\">\r\n              <h4>Payment Method</h4>\r\n              <div className=\"payment-options\">\r\n                <label className={`payment-option ${paymentMethod === 'stripe' ? 'active' : ''}`}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"stripe\"\r\n                    checked={paymentMethod === 'stripe'}\r\n                    onChange={() => setPaymentMethod('stripe')}\r\n                  />\r\n                  <FiCreditCard /> Credit Card\r\n                </label>\r\n                \r\n                <label className={`payment-option ${paymentMethod === 'dummy' ? 'active' : ''}`}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    value=\"dummy\"\r\n                    checked={paymentMethod === 'dummy'}\r\n                    onChange={() => setPaymentMethod('dummy')}\r\n                  />\r\n                  <FiDollarSign /> Demo Payment\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </aside>\r\n\r\n          {/* Product Grid */}\r\n          <section className=\"product-grid\">\r\n            {filteredProducts.length === 0 ? (\r\n              <div className=\"no-results\">\r\n                <FiX size={48} />\r\n                <h3>No products found</h3>\r\n                <p>Try adjusting your search or filters</p>\r\n              </div>\r\n            ) : (\r\n              filteredProducts.map(product => (\r\n                <div key={product.id} className=\"product-card\" onClick={() => setSelectedProduct(product)}>\r\n                  <div className=\"product-image-container\">\r\n                    <img src={product.image} alt={product.name} />\r\n                    {product.price > 1000 && (\r\n                      <span className=\"premium-badge\">Premium</span>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"product-info\">\r\n                    <h3>{product.name}</h3>\r\n                    <div className=\"price\">${product.price.toLocaleString()}</div>\r\n                    \r\n                    <div className=\"rating\">\r\n                      {renderStars(product.rating)}\r\n                      <span>({product.reviews})</span>\r\n                    </div>\r\n                    \r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        addToCart(product);\r\n                      }}\r\n                      className=\"add-to-cart-btn\"\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </section>\r\n        </main>\r\n\r\n        {/* Shopping Cart Sidebar */}\r\n        {showCart && (\r\n          <div className=\"cart-overlay\">\r\n            <div className=\"cart-sidebar\">\r\n              <div className=\"cart-header\">\r\n                <h2>Your Cart</h2>\r\n                <button onClick={() => setShowCart(false)} className=\"close-cart\">\r\n                  <FiX />\r\n                </button>\r\n              </div>\r\n              \r\n              {cart.length === 0 ? (\r\n                <div className=\"empty-cart\">\r\n                  <FiShoppingCart size={48} />\r\n                  <p>Your cart is empty</p>\r\n                  <button \r\n                    onClick={() => setShowCart(false)}\r\n                    className=\"continue-shopping-btn\"\r\n                  >\r\n                    Continue Shopping\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <div className=\"cart-items\">\r\n                    {cart.map(item => (\r\n                      <div key={item.id} className=\"cart-item\">\r\n                        <img src={item.image} alt={item.name} />\r\n                        \r\n                        <div className=\"item-details\">\r\n                          <h4>{item.name}</h4>\r\n                          <div className=\"price\">${item.price.toLocaleString()}</div>\r\n                          \r\n                          <div className=\"quantity-controls\">\r\n                            <button \r\n                              onClick={() => removeFromCart(item.id)}\r\n                              className=\"quantity-btn\"\r\n                            >\r\n                              -\r\n                            </button>\r\n                            <span>{item.quantity}</span>\r\n                            <button \r\n                              onClick={() => addToCart(item)}\r\n                              className=\"quantity-btn\"\r\n                            >\r\n                              +\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <button \r\n                          onClick={() => removeFromCart(item.id, true)}\r\n                          className=\"remove-item-btn\"\r\n                        >\r\n                          <FiX />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <div className=\"cart-summary\">\r\n                    <div className=\"summary-row\">\r\n                      <span>Subtotal</span>\r\n                      <span>${totalPrice.toFixed(2)}</span>\r\n                    </div>\r\n                    <div className=\"summary-row\">\r\n                      <span>Shipping</span>\r\n                      <span>Free</span>\r\n                    </div>\r\n                    <div className=\"summary-row total\">\r\n                      <span>Total</span>\r\n                      <span>${totalPrice.toFixed(2)}</span>\r\n                    </div>\r\n                    \r\n                    <button\r\n                      onClick={paymentMethod === 'stripe' ? handleStripeCheckout : handleDummyPayment}\r\n                      disabled={isLoading}\r\n                      className=\"checkout-btn\"\r\n                    >\r\n                      {isLoading ? 'Processing...' : 'Proceed to Checkout'}\r\n                    </button>\r\n                    \r\n                    {error && <div className=\"error-message\">{error}</div>}\r\n                    {paymentStatus && (\r\n                      <div className=\"success-message\">\r\n                        <FiCheck /> {paymentStatus}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Product Detail Modal */}\r\n        {selectedProduct && (\r\n          <div className=\"product-modal-overlay\">\r\n            <div className=\"product-modal\">\r\n              <button \r\n                onClick={() => setSelectedProduct(null)} \r\n                className=\"close-modal\"\r\n              >\r\n                <FiX />\r\n              </button>\r\n              \r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-image\">\r\n                  <img src={selectedProduct.image} alt={selectedProduct.name} />\r\n                </div>\r\n                \r\n                <div className=\"modal-details\">\r\n                  <h2>{selectedProduct.name}</h2>\r\n                  \r\n                  <div className=\"price\">${selectedProduct.price.toLocaleString()}</div>\r\n                  \r\n                  <div className=\"rating\">\r\n                    {renderStars(selectedProduct.rating)}\r\n                    <span>{selectedProduct.rating} ({selectedProduct.reviews} reviews)</span>\r\n                  </div>\r\n                  \r\n                  <p className=\"description\">{selectedProduct.description}</p>\r\n                  \r\n                  <div className=\"modal-actions\">\r\n                    <button \r\n                      onClick={() => {\r\n                        addToCart(selectedProduct);\r\n                        setSelectedProduct(null);\r\n                        setShowCart(true);\r\n                      }}\r\n                      className=\"add-to-cart-btn\"\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    \r\n                    <button \r\n                      onClick={() => {\r\n                        addToCart(selectedProduct);\r\n                        setSelectedProduct(null);\r\n                        setShowCart(true);\r\n                      }}\r\n                      className=\"buy-now-btn\"\r\n                    >\r\n                      Buy Now\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Payment Success Notification */}\r\n        {paymentSuccess && (\r\n          <div className=\"payment-success-notification\">\r\n            <FiCheck className=\"success-icon\" />\r\n            <span>Payment successful! Your order has been placed.</span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Payment Form Popup */}\r\n        {showPaymentForm && (\r\n          <StripePaymentForm \r\n            totalPrice={totalPrice} \r\n            onSuccess={handlePaymentSuccess}\r\n            onClose={() => setShowPaymentForm(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default ProductPage;"],"names":["stripePromise","loadStripe","StripePaymentForm","_ref","totalPrice","onSuccess","onClose","stripe","useStripe","elements","useElements","error","setError","useState","processing","setProcessing","_jsx","className","children","_jsxs","onClick","FiX","toFixed","onSubmit","async","event","preventDefault","stripeError","confirmPayment","confirmParams","return_url","window","location","origin","redirect","message","err","CardElement","options","style","base","fontSize","color","invalid","type","disabled","ProductPage","products","id","name","price","image","rating","reviews","description","Array","fill","map","_","i","Math","floor","random","searchQuery","setSearchQuery","cart","setCart","paymentMethod","setPaymentMethod","isLoading","setIsLoading","paymentStatus","setPaymentStatus","showCart","setShowCart","selectedProduct","setSelectedProduct","filterPrice","setFilterPrice","sortOption","setSortOption","showPaymentForm","setShowPaymentForm","paymentSuccess","setPaymentSuccess","filteredProducts","filter","product","toLowerCase","includes","sort","a","b","reduce","total","item","quantity","cartItemCount","count","addToCart","prevCart","find","removeFromCart","productId","removeAll","arguments","length","undefined","productInCart","renderStars","stars","fullStars","hasHalfStar","push","FaStar","FaStarHalfAlt","FaRegStar","Elements","FiSearch","placeholder","value","onChange","e","target","FiShoppingCart","min","max","parseInt","checked","FiCreditCard","FiDollarSign","size","src","alt","toLocaleString","stopPropagation","_Fragment","handleStripeCheckout","handleDummyPayment","setTimeout","FiCheck","handlePaymentSuccess"],"sourceRoot":""}