{"version":3,"file":"static/js/224.31c445c0.chunk.js","mappings":"qMASA,MAAMA,EAAkB,CACtBC,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,eAAgB,GAChBC,kBAAmB,GACnBC,IAAK,GACLC,WAAY,GACZC,YAAa,IAwXf,EArXoBC,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAASlB,IAClCqB,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,OACtCK,EAAgBC,IAAqBN,EAAAA,EAAAA,UAAS,KAC9CO,EAAYC,IAAiBR,EAAAA,EAAAA,UAAS,KACtCS,EAAaC,IAAkBV,EAAAA,EAAAA,WAAS,IACxCW,EAAgBC,IAAqBZ,EAAAA,EAAAA,UAAS,OAC9Ca,EAAgBC,IAAqBd,EAAAA,EAAAA,UAAS,MAC/Ce,EAAW,wBAIXC,GAAgBC,EAAAA,EAAAA,cAAYC,UAChC,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,GAAGN,iBACpChB,EAAYoB,EAASG,KACvB,CAAE,MAAOC,GACPC,QAAQD,MAAM,gCAAiCA,GAC/CE,EAAAA,GAAMF,MAAM,gCACd,IACC,CAACR,IAGEW,GAAaT,EAAAA,EAAAA,cAAY,KAC7BP,GAAe,GACfE,EAAkB,MAClBV,EAAYpB,GACZsB,EAAc,MACdE,EAAkB,GAAG,GACpB,IAEGqB,GAAYV,EAAAA,EAAAA,cAAY,WAAqB,IAApBW,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACvCjB,EAAkBgB,GAElB1B,EAAY,CACVnB,MAAa,OAAP6C,QAAO,IAAPA,OAAO,EAAPA,EAAS7C,OAAQ,GACvBC,SAAgB,OAAP4C,QAAO,IAAPA,OAAO,EAAPA,EAAS5C,UAAW,GAC7BC,IAAY,OAAP2C,QAAO,IAAPA,GAAAA,EAAS3C,IAAM,IAAI+C,KAAKJ,EAAQ3C,KAAKgD,cAAcC,MAAM,KAAK,GAAK,GACxEhD,aAAoB,OAAP0C,QAAO,IAAPA,OAAO,EAAPA,EAAS1C,cAAe,GACrCC,OAAc,OAAPyC,QAAO,IAAPA,OAAO,EAAPA,EAASzC,QAAS,GACzBC,SAAgB,OAAPwC,QAAO,IAAPA,OAAO,EAAPA,EAASxC,UAAW,GAC7BC,SAAgB,OAAPuC,QAAO,IAAPA,OAAO,EAAPA,EAASvC,UAAW,GAC7BC,UAAiB,OAAPsC,QAAO,IAAPA,OAAO,EAAPA,EAAStC,WAAY,GAC/BC,YAAmB,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAASrC,aAAc,GACnCC,gBAAuB,OAAPoC,QAAO,IAAPA,OAAO,EAAPA,EAASpC,iBAAkB,GAC3CC,mBAA0B,OAAPmC,QAAO,IAAPA,OAAO,EAAPA,EAASnC,oBAAqB,GACjDC,KAAY,OAAPkC,QAAO,IAAPA,OAAO,EAAPA,EAASlC,MAAO,GACrBC,YAAmB,OAAPiC,QAAO,IAAPA,OAAO,EAAPA,EAASjC,aAAc,GACnCC,aAAoB,OAAPgC,QAAO,IAAPA,OAAO,EAAPA,EAAShC,cAAe,KAEvCQ,EAAc,MACdE,EAAkB,IAClBI,GAAe,GACfI,EAAkB,KACpB,GAAG,IAIGqB,GAAalB,EAAAA,EAAAA,cAAYC,UAC7B,MAAMI,EAAO,IAAIc,SAEjB,IAAK,MAAMC,KAAOvD,EACfwC,EAAKgB,OAAOD,EAAKpC,EAASoC,IAAQ,IAIrC,GADIlC,GAAYmB,EAAKgB,OAAO,aAAcnC,GACtCE,EACF,IAAK,IAAIkC,EAAI,EAAGA,EAAIlC,EAAeyB,OAAQS,IACzCjB,EAAKgB,OAAO,iBAAkBjC,EAAekC,IAIjD,IACM5B,SACIS,EAAAA,EAAMoB,IAAI,GAAGzB,iBAAwBJ,EAAe8B,KAAMnB,EAAM,CACpEoB,QAAS,CAAE,eAAgB,yBAE7BjB,EAAAA,GAAMkB,QAAQ,8CAERvB,EAAAA,EAAMwB,KAAK,GAAG7B,gBAAwBO,EAAM,CAChDoB,QAAS,CAAE,eAAgB,yBAE7BjB,EAAAA,GAAMkB,QAAQ,qCAEhB3B,IACAU,GACF,CAAE,MAAOH,GAAQ,IAADsB,EAAAC,EACdtB,QAAQD,MAAM,+BAAgCA,GAE9C,MAAMwB,GAAyB,QAAdF,EAAAtB,EAAMJ,gBAAQ,IAAA0B,GAAM,QAANC,EAAdD,EAAgBvB,YAAI,IAAAwB,OAAN,EAAdA,EAAsBE,UAAW,+BAClDvB,EAAAA,GAAMF,MAAMwB,EACd,IACC,CAAChC,EAAUJ,EAAgBV,EAAUE,EAAYE,EAAgBW,EAAeU,IAE7EuB,GAAehC,EAAAA,EAAAA,cAAYC,UAC/B,GAAIgC,OAAOC,QAAQ,iDACjB,UACQ/B,EAAAA,EAAMgC,OAAO,GAAGrC,iBAAwB0B,KAC9ChB,EAAAA,GAAMkB,QAAQ,sCACd3B,KACkB,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgB4B,MAAOA,GACxB3B,EAAkB,KAEvB,CAAE,MAAOS,GACPC,QAAQD,MAAM,iCAAkCA,GAChDE,EAAAA,GAAMF,MAAM,iCACd,CACF,GACC,CAACR,EAAUC,EAA6B,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgB4B,MAI7CY,EAAAA,EAAAA,YAAU,KACRrC,GAAe,GACd,CAACA,IAIJ,MAAMsC,EAAqBC,IACzB,MAAM,KAAExE,EAAI,MAAEyE,GAAUD,EAAEE,OAC1BvD,GAAawD,IAAI,IAAWA,EAAM,CAAC3E,GAAOyE,KAAS,EAG/CG,EAAoBJ,IACF,eAAlBA,EAAEE,OAAO1E,KACXqB,EAAcmD,EAAEE,OAAOG,MAAM,IAE7BtD,EAAkBuD,MAAMC,KAAKP,EAAEE,OAAOG,OACxC,EAaIG,EAAmBjE,EAASkE,QAAQpC,GACxCqC,OAAOC,OAAOtC,GAASuC,MAAMX,GACtB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOY,WAAWC,cAAcC,SAAS/D,OAK7C,OACEgE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAACC,SAAS,YAAYC,UAAW,IAAMC,iBAAiB,EAAOC,aAAa,EAAOC,cAAY,EAACC,KAAK,EAAOC,kBAAgB,EAACC,WAAS,EAACC,cAAY,KAClKV,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKC,UAClBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+BAGLC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBa,QAASA,IAAM1D,IAAY8C,SAAC,qBAGhEC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLC,YAAY,wBACZ/B,MAAOjD,EACPiF,SA1BsBjC,IAC1B/C,EAAc+C,EAAEE,OAAOD,MAAMa,cAAc,EA0BvCG,UAAU,kBAGZD,EAAAA,EAAAA,MAAA,SAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGV,EAAiB0B,KAAK7D,IACrB2C,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SACG7C,EAAQzB,YACPuE,EAAAA,EAAAA,KAAA,OACEgB,IAAK,GAAG3E,KAAYa,EAAQzB,aAC5BwF,IAAK,GAAG/D,EAAQ7C,iBAChB6G,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,UAAW,QAASC,aAAc,UAG5EtB,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQE,aAAc,MAAOC,gBAAiB,OAAQC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,SAAU,OAAQC,MAAO,QAAS7B,SAAC,cAGnMC,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQ7C,QACb2F,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQ5C,WACb0F,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQ1C,eACbwF,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQzC,SACbuF,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQxC,WACbsF,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQvC,WACbqF,EAAAA,EAAAA,KAAA,MAAAD,SAAK7C,EAAQtC,YACbiF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAe,CACdC,KAAMC,EAAAA,IACNjC,UAAU,wBACVa,QAASA,IAAM1D,EAAUC,GACzB8E,MAAM,UAERhC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAe,CACdC,KAAMG,EAAAA,IACNnC,UAAU,0BACVa,QAASA,IAAMpC,EAAarB,EAAQa,IACpCiE,MAAM,YAERhC,EAAAA,EAAAA,KAAA,UACEF,UAAU,yBACVa,QAASA,IArFJzD,KAClBd,EAAkBc,GAClBlB,GAAe,EAAM,EAmFOkG,CAAWhF,GAC1B8E,MAAM,OAAMjC,SACb,cApCI7C,EAAQa,WA8CtB5B,IACC0D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBa,QAASA,IAAMvE,EAAkB,MAAM2D,SAAA,CAAC,KACrEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBa,QAAU9B,GAAMA,EAAEsD,kBAAkBpC,SAAA,CAAC,KAClEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,UACEF,UAAU,cACVa,QAASA,IAAMvE,EAAkB,MACjC4F,MAAM,QAAOjC,SACd,aAIHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,CAAC,IACtC5D,EAAeV,aACZuE,EAAAA,EAAAA,KAAA,OACEgB,IAAK,GAAG3E,KAAYF,EAAeV,aACnCwF,IAAK,GAAG9E,EAAe9B,iBACvB6G,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,UAAW,QAASC,aAAc,MAAOc,aAAc,OAAQZ,QAAS,QAASa,WAAY,OAAQC,YAAa,WAGlKzC,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAE5D,EAAe9B,SAC1CwF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAE5D,EAAe7B,YAC9CuF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,SAAa,IAAE5D,EAAe5B,IAAM,IAAI+C,KAAKnB,EAAe5B,KAAKgI,qBAAuB,SAAU,KAC7G1C,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAE5D,EAAe3B,gBAClDqF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,IAAE5D,EAAe1B,UAC3CoF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAE5D,EAAezB,YAC7CmF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAAiB,IAAE5D,EAAexB,YAC7CkF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,eAAmB,IAAE5D,EAAevB,aAC/CiF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,iBAAqB,IAAE5D,EAAetB,eACjDgF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAAyB,IAAE5D,EAAerB,mBACrD+E,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAA4B,IAAE5D,EAAepB,sBACxD8E,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,SAAa,IAAE5D,EAAenB,QACzC6E,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,IAAE5D,EAAelB,eAChD4E,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAE5D,EAAejB,eACjDiB,EAAeR,gBAAkBQ,EAAeR,eAAeyB,OAAS,IACvEyC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2BACRC,EAAAA,EAAAA,KAAA,MAAAD,SACK5D,EAAeR,eAAeoF,KAAI,CAACyB,EAAKC,KACvCzC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KACE0C,KAAM,GAAGrG,KAAYmG,IACrBzD,OAAO,SACP4D,IAAI,sBAAqB5C,SAGxByC,EAAIhF,MAAM,KAAKoF,SAPXH,mBAoB5B1G,IACC8D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBa,QAAS3D,EAAW+C,SAAA,CAAC,KAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgBa,QAAU9B,GAAMA,EAAEsD,kBAAkBpC,SAAA,CAAC,KAClEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAK9D,EAAiB,eAAiB,qBACvC+D,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAca,QAAS3D,EAAYgF,MAAM,QAAOjC,SAAC,aAIrEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,CAAC,KAErCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,CAAC,KACzBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WAAaC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,OAAOwG,YAAY,OAAO/B,MAAOvD,EAASlB,MAAQ,GAAIyG,SAAUlC,EAAmBiE,UAAQ,QAC5IhD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eAAiBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,UAAUwG,YAAY,WAAW/B,MAAOvD,EAASjB,SAAW,GAAIwG,SAAUlC,QAC/HiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAAsBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,MAAMyE,MAAOvD,EAAShB,KAAO,GAAIuG,SAAUlC,QACrGiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eAAiBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,MAAMvG,KAAK,cAAcwG,YAAY,eAAe/B,MAAOvD,EAASf,aAAe,GAAIsG,SAAUlC,OAA0B,KACpKiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YAAcC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,QAAQvG,KAAK,QAAQwG,YAAY,QAAQ/B,MAAOvD,EAASd,OAAS,GAAIqG,SAAUlC,EAAmBiE,UAAQ,QACjJhD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cAAgBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,UAAUwG,YAAY,UAAU/B,MAAOvD,EAASb,SAAW,GAAIoG,SAAUlC,QAC7HiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cAAgBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,UAAUwG,YAAY,UAAU/B,MAAOvD,EAASZ,SAAW,GAAImG,SAAUlC,QAC7HiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBAAkBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,WAAWwG,YAAY,4BAA4B/B,MAAOvD,EAASX,UAAY,GAAIkG,SAAUlC,QACnJiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBAAoBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,aAAawG,YAAY,wCAAwC/B,MAAOvD,EAASV,YAAc,GAAIiG,SAAUlC,QACrKiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,sBAAwBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,iBAAiBwG,YAAY,kBAAkB/B,MAAOvD,EAAST,gBAAkB,GAAIgG,SAAUlC,QAC3JiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBAA2BC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,oBAAoBwG,YAAY,qBAAqB/B,MAAOvD,EAASR,mBAAqB,GAAI+F,SAAUlC,QACvKiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UAAYC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,MAAMwG,YAAY,YAAY/B,MAAOvD,EAASP,KAAO,GAAI8F,SAAUlC,QACnHiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBAAmBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,aAAawG,YAAY,sBAAsB/B,MAAOvD,EAASN,YAAc,GAAI6F,SAAUlC,QAClJiB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBAAqBC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,cAAcwG,YAAY,eAAe/B,MAAOvD,EAASL,aAAe,GAAI4F,SAAUlC,WAGlJiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,sBACPC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,aAAayI,OAAO,UAAUhC,SAAU7B,IAAoB,KAErE,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBR,cAAeA,IAC7BuE,EAAAA,EAAAA,KAAA,OAAKgB,IAAK,GAAG3E,KAAYJ,EAAeR,aAAcwF,IAAI,kBAAkBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,UAAW,QAASgB,WAAY,OAAQU,cAAe,YAG5KtH,IACCuE,EAAAA,EAAAA,KAAA,OAAKgB,IAAKgC,IAAIC,gBAAgBxH,GAAawF,IAAI,sBAAsBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,UAAW,QAASgB,WAAY,OAAQU,cAAe,gBAIzKlD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,2BACPC,EAAAA,EAAAA,KAAA,SAAOY,KAAK,OAAOvG,KAAK,iBAAiB6I,UAAQ,EAACpC,SAAU7B,KAE7C,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBN,iBAAkBM,EAAeN,eAAeyB,OAAS,IACtEyC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACHC,EAAAA,EAAAA,KAAA,MAAAD,SACK9D,EAAeN,eAAeoF,KAAI,CAACyB,EAAKC,KACrCzC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAG0C,KAAM,GAAGrG,KAAYmG,IAAOzD,OAAO,SAAS4D,IAAI,sBAAqB5C,SACnEyC,EAAIhF,MAAM,KAAKoF,SAFfH,UAWtB9G,EAAeyB,OAAS,IACvByC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACHC,EAAAA,EAAAA,KAAA,MAAAD,SACKpE,EAAeoF,KAAI,CAACyB,EAAKC,KACtBzC,EAAAA,EAAAA,KAAA,MAAAD,SAAiByC,EAAInI,MAAZoI,cAO3BzC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAca,QAASlD,EAAWsC,SACjD9D,EAAiB,iBAAmB,4BAM3C,C","sources":["components/student/StudentInfo.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './StudentInfo.css';\r\n\r\n// Define initial empty form state for resetting\r\nconst initialFormData = {\r\n  name: '',\r\n  sevisId: '',\r\n  dob: '',\r\n  phoneNumber: '',\r\n  email: '',\r\n  address: '',\r\n  country: '',\r\n  visaType: '',\r\n  visaStatus: '',\r\n  universityName: '',\r\n  universityAddress: '',\r\n  job: '',\r\n  experience: '',\r\n  companyName: '',\r\n};\r\n\r\nconst StudentInfo = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [supportingDocs, setSupportingDocs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingStudent, setEditingStudent] = useState(null);\r\n  const [viewingStudent, setViewingStudent] = useState(null);\r\n  const BASE_URL = 'http://localhost:3001';\r\n\r\n  // --- Core Functions (define before dependent functions) ---\r\n\r\n  const fetchStudents = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`${BASE_URL}/studentinfo`);\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch student data:', error); // Log error for debugging\r\n      toast.error('Failed to fetch student data.');\r\n    }\r\n  }, [BASE_URL]);\r\n\r\n  // Defined closeModal *before* handleSave which uses it as a dependency\r\n  const closeModal = useCallback(() => {\r\n    setIsModalOpen(false);\r\n    setEditingStudent(null);\r\n    setFormData(initialFormData); // Reset form to initial state\r\n    setProfilePic(null);          // Reset profile picture\r\n    setSupportingDocs([]);        // Reset supporting documents\r\n  }, []); // No dependencies needed as setters are stable\r\n\r\n  const openModal = useCallback((student = null) => {\r\n    setEditingStudent(student);\r\n    // Populate form data if editing, otherwise use initial state\r\n    setFormData({\r\n      name: student?.name || '',\r\n      sevisId: student?.sevisId || '',\r\n      dob: student?.dob ? new Date(student.dob).toISOString().split('T')[0] : '',\r\n      phoneNumber: student?.phoneNumber || '',\r\n      email: student?.email || '',\r\n      address: student?.address || '',\r\n      country: student?.country || '',\r\n      visaType: student?.visaType || '',\r\n      visaStatus: student?.visaStatus || '',\r\n      universityName: student?.universityName || '',\r\n      universityAddress: student?.universityAddress || '',\r\n      job: student?.job || '',\r\n      experience: student?.experience || '',\r\n      companyName: student?.companyName || '',\r\n    });\r\n    setProfilePic(null); // Always reset file inputs when opening modal\r\n    setSupportingDocs([]);\r\n    setIsModalOpen(true);\r\n    setViewingStudent(null); // Close view modal if add/edit is opened\r\n  }, []); // No dependencies needed\r\n\r\n  // --- Dependent Functions ---\r\n\r\n  const handleSave = useCallback(async () => {\r\n    const data = new FormData();\r\n    // Ensure all keys from initialFormData are present, even if empty\r\n    for (const key in initialFormData) {\r\n       data.append(key, formData[key] || '');\r\n    }\r\n\r\n    if (profilePic) data.append('profilePic', profilePic);\r\n    if (supportingDocs) {\r\n      for (let i = 0; i < supportingDocs.length; i++) {\r\n        data.append('supportingDocs', supportingDocs[i]);\r\n      }\r\n    }\r\n\r\n    try {\r\n      if (editingStudent) {\r\n        await axios.put(`${BASE_URL}/studentinfo/${editingStudent.id}`, data, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n        toast.success('Student data updated successfully!');\r\n      } else {\r\n        await axios.post(`${BASE_URL}/studentinfo`, data, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n        toast.success('Student data saved successfully!');\r\n      }\r\n      fetchStudents(); // Refresh list\r\n      closeModal();    // Close modal after save (NOW DECLARED ABOVE)\r\n    } catch (error) {\r\n      console.error('Failed to save student data:', error); // Log error\r\n       // Provide more specific error if possible from response\r\n      const errorMsg = error.response?.data?.message || 'Failed to save student data.';\r\n      toast.error(errorMsg);\r\n    }\r\n  }, [BASE_URL, editingStudent, formData, profilePic, supportingDocs, fetchStudents, closeModal]); // closeModal is now valid here\r\n\r\n  const handleDelete = useCallback(async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this student?')) {\r\n      try {\r\n        await axios.delete(`${BASE_URL}/studentinfo/${id}`);\r\n        toast.success('Student data deleted successfully!');\r\n        fetchStudents(); // Refresh list\r\n        if (viewingStudent?.id === id) {\r\n           setViewingStudent(null); // Close view modal if deleted student was being viewed\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to delete student data:', error); // Log error\r\n        toast.error('Failed to delete student data.');\r\n      }\r\n    }\r\n  }, [BASE_URL, fetchStudents, viewingStudent?.id]); // Added viewingStudent.id dependency\r\n\r\n  // --- useEffect Hook ---\r\n\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, [fetchStudents]); // Run once on mount and if fetchStudents changes (it won't due to useCallback)\r\n\r\n  // --- Other Event Handlers ---\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.name === 'profilePic') {\r\n      setProfilePic(e.target.files[0]);\r\n    } else {\r\n      setSupportingDocs(Array.from(e.target.files)); // Ensure it's an array\r\n    }\r\n  };\r\n\r\n   const handleView = (student) => {\r\n     setViewingStudent(student);\r\n     setIsModalOpen(false); // Close edit/add modal if view is opened\r\n   };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value.toLowerCase());\r\n  };\r\n\r\n  // --- Filtering Logic ---\r\n  const filteredStudents = students.filter((student) =>\r\n    Object.values(student).some((value) =>\r\n      value?.toString().toLowerCase().includes(searchTerm)\r\n    )\r\n  );\r\n\r\n  // --- JSX Return ---\r\n  return (\r\n    <div className=\"student-info\">\r\n      <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <div className=\"stu\">\r\n        <p>Student Info Management</p>\r\n      </div>\r\n\r\n      <button className=\"add-student-btn\" onClick={() => openModal()}>\r\n        Add New Student\r\n      </button>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search all columns...\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n        className=\"search-input\"\r\n      />\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Profile Picture</th>\r\n            <th>Name</th>\r\n            <th>SEVIS ID</th>\r\n            <th>Phone Number</th>\r\n            <th>Email</th>\r\n            <th>Address</th>\r\n            <th>Country</th>\r\n            <th>Visa Type</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredStudents.map((student) => (\r\n            <tr key={student.id}>\r\n              <td>\r\n                {student.profilePic ? (\r\n                  <img\r\n                    src={`${BASE_URL}/${student.profilePic}`}\r\n                    alt={`${student.name}'s profile`} // Better alt text\r\n                    style={{ width: '50px', height: '50px', objectFit: 'cover', borderRadius: '50%' }} // Added border radius\r\n                  />\r\n                ) : (\r\n                  <div style={{ width: '50px', height: '50px', borderRadius: '50%', backgroundColor: '#eee', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '12px', color: '#666' }}>No Pic</div> // Placeholder style\r\n                )}\r\n              </td>\r\n              <td>{student.name}</td>\r\n              <td>{student.sevisId}</td>\r\n              <td>{student.phoneNumber}</td>\r\n              <td>{student.email}</td>\r\n              <td>{student.address}</td>\r\n              <td>{student.country}</td>\r\n              <td>{student.visaType}</td>\r\n              <td>\r\n                <FontAwesomeIcon\r\n                  icon={faEdit}\r\n                  className=\"action-icon edit-icon\" // Use classes for styling\r\n                  onClick={() => openModal(student)}\r\n                  title=\"Edit\"\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faTrash}\r\n                  className=\"action-icon delete-icon\" // Use classes for styling\r\n                  onClick={() => handleDelete(student.id)}\r\n                  title=\"Delete\"\r\n                />\r\n                <button\r\n                  className=\"view-btn action-button\" // Use classes for styling\r\n                  onClick={() => handleView(student)}\r\n                  title=\"View\"\r\n                >\r\n                  View\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* View Student Details Modal */}\r\n      {viewingStudent && (\r\n        <div className=\"modal-overlay\" onClick={() => setViewingStudent(null)}> {/* Close on overlay click */}\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}> {/* Prevent closing when clicking inside modal */}\r\n            <div className=\"modal-header\">\r\n              <h2>Student Details</h2>\r\n              <button\r\n                className=\"close-modal\"\r\n                onClick={() => setViewingStudent(null)}\r\n                title=\"Close\"\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body view-details\"> {/* Specific class for view */}\r\n              {viewingStudent.profilePic && (\r\n                  <img\r\n                    src={`${BASE_URL}/${viewingStudent.profilePic}`}\r\n                    alt={`${viewingStudent.name}'s profile`}\r\n                    style={{ width: '100px', height: '100px', objectFit: 'cover', borderRadius: '50%', marginBottom: '15px', display: 'block', marginLeft: 'auto', marginRight: 'auto' }}\r\n                  />\r\n                )}\r\n              <p><strong>Name:</strong> {viewingStudent.name}</p>\r\n              <p><strong>SEVIS ID:</strong> {viewingStudent.sevisId}</p>\r\n              <p><strong>DOB:</strong> {viewingStudent.dob ? new Date(viewingStudent.dob).toLocaleDateString() : 'N/A'}</p> {/* Format Date */}\r\n              <p><strong>Phone Number:</strong> {viewingStudent.phoneNumber}</p>\r\n              <p><strong>Email:</strong> {viewingStudent.email}</p>\r\n              <p><strong>Address:</strong> {viewingStudent.address}</p>\r\n              <p><strong>Country:</strong> {viewingStudent.country}</p>\r\n              <p><strong>Visa Type:</strong> {viewingStudent.visaType}</p>\r\n              <p><strong>Visa Status:</strong> {viewingStudent.visaStatus}</p>\r\n              <p><strong>University Name:</strong> {viewingStudent.universityName}</p>\r\n              <p><strong>University Address:</strong> {viewingStudent.universityAddress}</p>\r\n              <p><strong>Job:</strong> {viewingStudent.job}</p>\r\n              <p><strong>Experience:</strong> {viewingStudent.experience}</p>\r\n              <p><strong>Company Name:</strong> {viewingStudent.companyName}</p>\r\n              {viewingStudent.supportingDocs && viewingStudent.supportingDocs.length > 0 && (\r\n                <div>\r\n                    <strong>Supporting Documents:</strong>\r\n                    <ul>\r\n                        {viewingStudent.supportingDocs.map((doc, index) => (\r\n                          <li key={index}>\r\n                            <a\r\n                              href={`${BASE_URL}/${doc}`}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              {/* Extract filename */}\r\n                              {doc.split('/').pop()}\r\n                            </a>\r\n                          </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add/Edit Student Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\" onClick={closeModal}> {/* Close on overlay click */}\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}> {/* Prevent closing when clicking inside modal */}\r\n            <div className=\"modal-header\">\r\n              <h2>{editingStudent ? 'Edit Student' : 'Add New Student'}</h2>\r\n              <button className=\"close-modal\" onClick={closeModal} title=\"Close\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body form-fields\"> {/* Specific class for form */}\r\n              {/* Consider grouping fields logically, e.g., Personal, Contact, Visa, Work */}\r\n               <div className=\"form-grid\"> {/* Use CSS Grid or Flexbox for layout */}\r\n                 <div><label>NAME:</label><input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name || ''} onChange={handleInputChange} required/></div>\r\n                 <div><label>SEVIS ID:</label><input type=\"text\" name=\"sevisId\" placeholder=\"SEVIS ID\" value={formData.sevisId || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>DATE OF BIRTH:</label><input type=\"date\" name=\"dob\" value={formData.dob || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>PHONE NO:</label><input type=\"tel\" name=\"phoneNumber\" placeholder=\"Phone Number\" value={formData.phoneNumber || ''} onChange={handleInputChange}/></div> {/* Use type=\"tel\" */}\r\n                 <div><label>EMAIL:</label><input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email || ''} onChange={handleInputChange} required/></div>\r\n                 <div><label>ADDRESS:</label><input type=\"text\" name=\"address\" placeholder=\"Address\" value={formData.address || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>COUNTRY:</label><input type=\"text\" name=\"country\" placeholder=\"Country\" value={formData.country || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>VISA TYPE:</label><input type=\"text\" name=\"visaType\" placeholder=\"Visa Type (e.g., F1, H1B)\" value={formData.visaType || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>VISA STATUS:</label><input type=\"text\" name=\"visaStatus\" placeholder=\"Visa Status (e.g., Approved, Pending)\" value={formData.visaStatus || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>UNIVERSITY NAME:</label><input type=\"text\" name=\"universityName\" placeholder=\"University Name\" value={formData.universityName || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>UNIVERSITY ADDRESS:</label><input type=\"text\" name=\"universityAddress\" placeholder=\"University Address\" value={formData.universityAddress || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>JOB:</label><input type=\"text\" name=\"job\" placeholder=\"Job Title\" value={formData.job || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>EXPERIENCE:</label><input type=\"text\" name=\"experience\" placeholder=\"Years of Experience\" value={formData.experience || ''} onChange={handleInputChange}/></div>\r\n                 <div><label>COMPANY NAME:</label><input type=\"text\" name=\"companyName\" placeholder=\"Company Name\" value={formData.companyName || ''} onChange={handleInputChange}/></div>\r\n               </div>\r\n\r\n              <div className=\"file-input-section\">\r\n                <label>Profile Picture:</label>\r\n                <input type=\"file\" name=\"profilePic\" accept=\"image/*\" onChange={handleFileChange} /> {/* Accept only images */}\r\n                {/* Show current image preview if editing */}\r\n                {editingStudent?.profilePic && !profilePic && (\r\n                   <img src={`${BASE_URL}/${editingStudent.profilePic}`} alt=\"Current profile\" style={{ width: '60px', height: '60px', objectFit: 'cover', marginLeft: '10px', verticalAlign: 'middle' }} />\r\n                )}\r\n                 {/* Show newly selected image preview */}\r\n                 {profilePic && (\r\n                   <img src={URL.createObjectURL(profilePic)} alt=\"New profile preview\" style={{ width: '60px', height: '60px', objectFit: 'cover', marginLeft: '10px', verticalAlign: 'middle' }} />\r\n                 )}\r\n              </div>\r\n\r\n              <div className=\"file-input-section\">\r\n                <label>Supporting Documents:</label>\r\n                <input type=\"file\" name=\"supportingDocs\" multiple onChange={handleFileChange} />\r\n                {/* List current documents if editing */}\r\n                {editingStudent?.supportingDocs && editingStudent.supportingDocs.length > 0 && (\r\n                    <div>\r\n                        <p>Current Documents:</p>\r\n                        <ul>\r\n                            {editingStudent.supportingDocs.map((doc, index) => (\r\n                                <li key={index}>\r\n                                    <a href={`${BASE_URL}/${doc}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        {doc.split('/').pop()}\r\n                                    </a>\r\n                                    {/* Optional: Add a way to remove existing docs */}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                 )}\r\n                  {/* List newly selected documents */}\r\n                  {supportingDocs.length > 0 && (\r\n                    <div>\r\n                        <p>New Documents to Upload:</p>\r\n                        <ul>\r\n                            {supportingDocs.map((doc, index) => (\r\n                                <li key={index}>{doc.name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                   )}\r\n              </div>\r\n\r\n              <button className=\"save-button\" onClick={handleSave}>\r\n                {editingStudent ? 'Update Student' : 'Save Student'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentInfo;"],"names":["initialFormData","name","sevisId","dob","phoneNumber","email","address","country","visaType","visaStatus","universityName","universityAddress","job","experience","companyName","StudentInfo","students","setStudents","useState","formData","setFormData","profilePic","setProfilePic","supportingDocs","setSupportingDocs","searchTerm","setSearchTerm","isModalOpen","setIsModalOpen","editingStudent","setEditingStudent","viewingStudent","setViewingStudent","BASE_URL","fetchStudents","useCallback","async","response","axios","get","data","error","console","toast","closeModal","openModal","student","arguments","length","undefined","Date","toISOString","split","handleSave","FormData","key","append","i","put","id","headers","success","post","_error$response","_error$response$data","errorMsg","message","handleDelete","window","confirm","delete","useEffect","handleInputChange","e","value","target","prev","handleFileChange","files","Array","from","filteredStudents","filter","Object","values","some","toString","toLowerCase","includes","_jsxs","className","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","onClick","type","placeholder","onChange","map","src","alt","style","width","height","objectFit","borderRadius","backgroundColor","display","alignItems","justifyContent","fontSize","color","FontAwesomeIcon","icon","faEdit","title","faTrash","handleView","stopPropagation","marginBottom","marginLeft","marginRight","toLocaleDateString","doc","index","href","rel","pop","required","accept","verticalAlign","URL","createObjectURL","multiple"],"sourceRoot":""}