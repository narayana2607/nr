{"version":3,"file":"static/js/8.74735a22.chunk.js","mappings":"sJAIA,MAwEA,EAxEoBA,KAClB,MAAOC,EAAkBC,IAAuBC,EAAAA,EAAAA,WAAS,IAClDC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,CACvC,CAAEG,KAAM,qCAAsCC,OAAQ,UAEjDC,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,IAEzCO,EAAgBA,KACpBR,GAAqBD,EAAiB,EAoBxC,OACEU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAeC,QAASN,EAAcG,UACnDC,EAAAA,EAAAA,KAAA,OAAKG,I,s1IAAkBC,IAAI,mBAI5BjB,IACCU,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oBAAmBF,SAAA,EAChCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,UAAQE,QAASN,EAAeK,UAAU,gBAAeF,SAAC,UAI5DF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,SAC9BT,EAASe,KAAI,CAACC,EAASC,KACtBP,EAAAA,EAAAA,KAAA,OAEEC,UAAW,WAAWK,EAAQb,iBAAiBM,SAE9CO,EAAQd,MAHJe,QAOXP,EAAAA,EAAAA,KAAA,SACEQ,KAAK,OACLC,YAAY,4BACZR,UAAU,gBACVS,MAAOhB,EACPiB,SAAWC,GAAMjB,EAAeiB,EAAEC,OAAOH,UAE3CV,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAcC,QAnDhBY,KACG,KAAvBpB,EAAYqB,SACdxB,GAAayB,GAAiB,IACzBA,EACH,CAAExB,KAAME,EAAaD,OAAQ,WAE/BE,EAAe,IAEfsB,YAAW,KACT1B,GAAayB,GAAiB,IACzBA,EACH,CAAExB,KAAM,gCAAiCC,OAAQ,SACjD,GACD,KACL,EAqCmEM,SAAC,iBAMjE,C","sources":["components/ai/ChatbotIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport chatbotIcon from '../assets/chatboticon.jpeg'; // Import the image\r\nimport './ChatbotIcon.css';\r\n\r\nconst ChatbotIcon = () => {\r\n  const [isChatbotVisible, setIsChatbotVisible] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hello! How can I assist you today?\", sender: \"bot\" },\r\n  ]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n\r\n  const toggleChatbot = () => {\r\n    setIsChatbotVisible(!isChatbotVisible);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (userMessage.trim() !== \"\") {\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { text: userMessage, sender: \"user\" },\r\n      ]);\r\n      setUserMessage(\"\");\r\n\r\n      setTimeout(() => {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { text: \"This is a simple AI response.\", sender: \"bot\" },\r\n        ]);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Floating Chatbot Icon */}\r\n      <div className=\"chatbot-icon\" onClick={toggleChatbot}>\r\n        <img src={chatbotIcon} alt=\"Chatbot Icon\" />\r\n      </div>\r\n\r\n      {/* Chatbot UI */}\r\n      {isChatbotVisible && (\r\n        <div className=\"chatbot-container\">\r\n          <div className=\"chatbot-header\">\r\n            <h3>AI Chatbot</h3>\r\n            <button onClick={toggleChatbot} className=\"close-chatbot\">\r\n              X\r\n            </button>\r\n          </div>\r\n          <div className=\"chatbot-body\">\r\n            <div className=\"chatbot-messages\">\r\n              {messages.map((message, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`message ${message.sender}-message`}\r\n                >\r\n                  {message.text}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type your message here...\"\r\n              className=\"chatbot-input\"\r\n              value={userMessage}\r\n              onChange={(e) => setUserMessage(e.target.value)}\r\n            />\r\n            <button className=\"send-button\" onClick={handleSendMessage}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatbotIcon;\r\n"],"names":["ChatbotIcon","isChatbotVisible","setIsChatbotVisible","useState","messages","setMessages","text","sender","userMessage","setUserMessage","toggleChatbot","_jsxs","_Fragment","children","_jsx","className","onClick","src","alt","map","message","index","type","placeholder","value","onChange","e","target","handleSendMessage","trim","prevMessages","setTimeout"],"sourceRoot":""}