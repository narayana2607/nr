{"version":3,"file":"static/js/272.5fa894b9.chunk.js","mappings":"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","sources":["../node_modules/tesseract.js/src/worker/browser/loadImage.js","../node_modules/tesseract.js/src/worker/browser/defaultOptions.js","../node_modules/tesseract.js/src/worker/browser/onMessage.js","../node_modules/tesseract.js/src/worker/browser/index.js","components/dob/Age.js","../node_modules/tesseract.js/src/utils/resolvePaths.js","../node_modules/tesseract.js/src/createScheduler.js","../node_modules/tesseract.js/src/constants/PSM.js","../node_modules/tesseract.js/src/worker/browser/terminateWorker.js","../node_modules/tesseract.js/src/worker/browser/spawnWorker.js","../node_modules/tesseract.js/src/constants/defaultOptions.js","../node_modules/tesseract.js/src/constants/languages.js","../node_modules/tesseract.js/src/createJob.js","../node_modules/tesseract.js/src/Tesseract.js","../node_modules/tesseract.js/src/createWorker.js","../node_modules/tesseract.js/src/worker/browser/send.js","../node_modules/tesseract.js/src/utils/getEnvironment.js","../node_modules/tesseract.js/src/constants/OEM.js","../node_modules/tesseract.js/src/utils/getId.js","../node_modules/tesseract.js/src/utils/log.js","../node_modules/tesseract.js/src/index.js"],"sourcesContent":["/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(image);\n      data = await resp.arrayBuffer();\n    }\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n    const blob = await image.convertToBlob();\n    data = await readFromBlobOrFile(blob);\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n","const version = require('../../../package.json').version;\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: `https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`,\n};\n","module.exports = (worker, handler) => {\n  worker.onmessage = ({ data }) => { // eslint-disable-line\n    handler(data);\n  };\n};\n","/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst defaultOptions = require('./defaultOptions');\nconst spawnWorker = require('./spawnWorker');\nconst terminateWorker = require('./terminateWorker');\nconst onMessage = require('./onMessage');\nconst send = require('./send');\nconst loadImage = require('./loadImage');\n\nmodule.exports = {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  send,\n  loadImage,\n};\n","import React, { useState } from \"react\";\r\nimport Tesseract from \"tesseract.js\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Age.css\";\r\n\r\nconst AgeVerificationApp = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const supportedFileTypes = [\r\n    \"JPG\", \"JPEG\", \"PNG\", \"HEIC\", \"GIF\", \"WEBP\", \"BMP\", \"TIFF\"\r\n  ];\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (!selectedFile) return setError(\"No file selected.\");\r\n    if (!selectedFile.type.startsWith(\"image/\")) return setError(\"Invalid file type. Please upload an image.\");\r\n    if (selectedFile.size > 20 * 1024 * 1024) return setError(\"File size exceeds 20MB. Please upload a smaller image.\");\r\n    setFile(selectedFile);\r\n    setImagePreview(URL.createObjectURL(selectedFile));\r\n    setError(\"\");\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const extractDOB = (text) => {\r\n    const patterns = [\r\n      /(?:DOB|dob|birth date|date of birth)[:\\s]*([\\d]{1,2}[-/.][\\d]{1,2}[-/.][\\d]{2,4})/i,\r\n      /(\\d{1,2}[-/.]\\d{1,2}[-/.]\\d{2,4})/\r\n    ];\r\n    for (let pattern of patterns) {\r\n      const match = text.match(pattern);\r\n      if (match) return match[1];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const extractName = (text) => {\r\n    const lines = text.split(\"\\n\").map(line => line.trim()).filter(line => line.length > 0);\r\n    return lines.length > 0 ? lines[0] : \"Unknown\";\r\n  };\r\n\r\n  const calculateAge = (dob) => {\r\n    if (!dob) return null;\r\n    const parts = dob.split(/[-/.]/);\r\n    let formattedDOB;\r\n    if (parts[2].length === 4) {\r\n      formattedDOB = `${parts[2]}-${parts[1]}-${parts[0]}`;\r\n    } else {\r\n      const year = parseInt(parts[2]) > 30 ? `19${parts[2]}` : `20${parts[2]}`;\r\n      formattedDOB = `${year}-${parts[1]}-${parts[0]}`;\r\n    }\r\n    const dobDate = new Date(formattedDOB);\r\n    if (isNaN(dobDate.getTime())) return null;\r\n    const today = new Date();\r\n    let age = today.getFullYear() - dobDate.getFullYear();\r\n    const monthDiff = today.getMonth() - dobDate.getMonth();\r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < dobDate.getDate())) {\r\n      age--;\r\n    }\r\n    return age;\r\n  };\r\n\r\n  const handleExtractText = async () => {\r\n    if (!file) return setError(\"Please select an image first.\");\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setShowPopup(false);\r\n\r\n    try {\r\n      const { data: { text } } = await Tesseract.recognize(file, \"eng\", {\r\n        logger: (m) => console.log(\"Tesseract Log:\", m)\r\n      });\r\n      console.log(\"Extracted Text:\\n\", text);\r\n      const dob = extractDOB(text);\r\n      const extractedName = extractName(text);\r\n      setName(extractedName);\r\n\r\n      if (dob) {\r\n        const calculatedAge = calculateAge(dob);\r\n        setAge(calculatedAge);\r\n        setShowPopup(true);\r\n        if (calculatedAge < 18) {\r\n          toast.error(\"Access Denied! You must be at least 18 years old.\", { position: \"bottom-center\" });\r\n        } else {\r\n          toast.success(`Your current age is: ${calculatedAge} years`, { position: \"bottom-center\" });\r\n        }\r\n      } else {\r\n        toast.warn(\"Date of Birth not found in the extracted text.\", { position: \"bottom-center\" });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Tesseract Error:\", err);\r\n      setError(\"Failed to extract text. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"age-verification-container\">\r\n      <h2 className=\"age-verification-heading\">Age Verification</h2>\r\n\r\n      <div className=\"supported-files\">\r\n        <h3>Supported File Types</h3>\r\n        <p>{supportedFileTypes.join(\", \")}</p>\r\n      </div>\r\n\r\n      <div className=\"upload-section\">\r\n        <input type=\"file\" onChange={handleFileChange} accept=\"image/*\" className=\"file-input\" />\r\n        {imagePreview && <img src={imagePreview} alt=\"Uploaded\" className=\"uploaded-image\" />}\r\n        <button onClick={handleExtractText} disabled={loading} className=\"extract-button\">\r\n          {loading ? \"Extracting...\" : \"Extract Text\"}\r\n        </button>\r\n      </div>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {showPopup && (\r\n        <div className=\"result-container\">\r\n          <h3 className=\"result-heading\">Verification Details</h3>\r\n          <p>Name: {name}</p>\r\n          <p>Age: {age !== null ? age : \"Not found\"}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgeVerificationApp;\r\n","const isBrowser = require('./getEnvironment')('type') === 'browser';\n\nconst resolveURL = isBrowser ? s => (new URL(s, window.location.href)).href : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n","const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n","/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n  RAW_LINE: '13',\n};\n","/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = (worker) => {\n  worker.terminate();\n};\n","/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n","module.exports = {\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: () => {},\n};\n","/*\n * languages with existing tesseract traineddata\n * https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016\n */\n\n/**\n * @typedef {object} Languages\n * @property {string} AFR Afrikaans\n * @property {string} AMH Amharic\n * @property {string} ARA Arabic\n * @property {string} ASM Assamese\n * @property {string} AZE Azerbaijani\n * @property {string} AZE_CYRL Azerbaijani - Cyrillic\n * @property {string} BEL Belarusian\n * @property {string} BEN Bengali\n * @property {string} BOD Tibetan\n * @property {string} BOS Bosnian\n * @property {string} BUL Bulgarian\n * @property {string} CAT Catalan; Valencian\n * @property {string} CEB Cebuano\n * @property {string} CES Czech\n * @property {string} CHI_SIM Chinese - Simplified\n * @property {string} CHI_TRA Chinese - Traditional\n * @property {string} CHR Cherokee\n * @property {string} CYM Welsh\n * @property {string} DAN Danish\n * @property {string} DEU German\n * @property {string} DZO Dzongkha\n * @property {string} ELL Greek, Modern (1453-)\n * @property {string} ENG English\n * @property {string} ENM English, Middle (1100-1500)\n * @property {string} EPO Esperanto\n * @property {string} EST Estonian\n * @property {string} EUS Basque\n * @property {string} FAS Persian\n * @property {string} FIN Finnish\n * @property {string} FRA French\n * @property {string} FRK German Fraktur\n * @property {string} FRM French, Middle (ca. 1400-1600)\n * @property {string} GLE Irish\n * @property {string} GLG Galician\n * @property {string} GRC Greek, Ancient (-1453)\n * @property {string} GUJ Gujarati\n * @property {string} HAT Haitian; Haitian Creole\n * @property {string} HEB Hebrew\n * @property {string} HIN Hindi\n * @property {string} HRV Croatian\n * @property {string} HUN Hungarian\n * @property {string} IKU Inuktitut\n * @property {string} IND Indonesian\n * @property {string} ISL Icelandic\n * @property {string} ITA Italian\n * @property {string} ITA_OLD Italian - Old\n * @property {string} JAV Javanese\n * @property {string} JPN Japanese\n * @property {string} KAN Kannada\n * @property {string} KAT Georgian\n * @property {string} KAT_OLD Georgian - Old\n * @property {string} KAZ Kazakh\n * @property {string} KHM Central Khmer\n * @property {string} KIR Kirghiz; Kyrgyz\n * @property {string} KOR Korean\n * @property {string} KUR Kurdish\n * @property {string} LAO Lao\n * @property {string} LAT Latin\n * @property {string} LAV Latvian\n * @property {string} LIT Lithuanian\n * @property {string} MAL Malayalam\n * @property {string} MAR Marathi\n * @property {string} MKD Macedonian\n * @property {string} MLT Maltese\n * @property {string} MSA Malay\n * @property {string} MYA Burmese\n * @property {string} NEP Nepali\n * @property {string} NLD Dutch; Flemish\n * @property {string} NOR Norwegian\n * @property {string} ORI Oriya\n * @property {string} PAN Panjabi; Punjabi\n * @property {string} POL Polish\n * @property {string} POR Portuguese\n * @property {string} PUS Pushto; Pashto\n * @property {string} RON Romanian; Moldavian; Moldovan\n * @property {string} RUS Russian\n * @property {string} SAN Sanskrit\n * @property {string} SIN Sinhala; Sinhalese\n * @property {string} SLK Slovak\n * @property {string} SLV Slovenian\n * @property {string} SPA Spanish; Castilian\n * @property {string} SPA_OLD Spanish; Castilian - Old\n * @property {string} SQI Albanian\n * @property {string} SRP Serbian\n * @property {string} SRP_LATN Serbian - Latin\n * @property {string} SWA Swahili\n * @property {string} SWE Swedish\n * @property {string} SYR Syriac\n * @property {string} TAM Tamil\n * @property {string} TEL Telugu\n * @property {string} TGK Tajik\n * @property {string} TGL Tagalog\n * @property {string} THA Thai\n * @property {string} TIR Tigrinya\n * @property {string} TUR Turkish\n * @property {string} UIG Uighur; Uyghur\n * @property {string} UKR Ukrainian\n * @property {string} URD Urdu\n * @property {string} UZB Uzbek\n * @property {string} UZB_CYRL Uzbek - Cyrillic\n * @property {string} VIE Vietnamese\n * @property {string} YID Yiddish\n */\n\n/**\n  * @type {Languages}\n  */\nmodule.exports = {\n  AFR: 'afr',\n  AMH: 'amh',\n  ARA: 'ara',\n  ASM: 'asm',\n  AZE: 'aze',\n  AZE_CYRL: 'aze_cyrl',\n  BEL: 'bel',\n  BEN: 'ben',\n  BOD: 'bod',\n  BOS: 'bos',\n  BUL: 'bul',\n  CAT: 'cat',\n  CEB: 'ceb',\n  CES: 'ces',\n  CHI_SIM: 'chi_sim',\n  CHI_TRA: 'chi_tra',\n  CHR: 'chr',\n  CYM: 'cym',\n  DAN: 'dan',\n  DEU: 'deu',\n  DZO: 'dzo',\n  ELL: 'ell',\n  ENG: 'eng',\n  ENM: 'enm',\n  EPO: 'epo',\n  EST: 'est',\n  EUS: 'eus',\n  FAS: 'fas',\n  FIN: 'fin',\n  FRA: 'fra',\n  FRK: 'frk',\n  FRM: 'frm',\n  GLE: 'gle',\n  GLG: 'glg',\n  GRC: 'grc',\n  GUJ: 'guj',\n  HAT: 'hat',\n  HEB: 'heb',\n  HIN: 'hin',\n  HRV: 'hrv',\n  HUN: 'hun',\n  IKU: 'iku',\n  IND: 'ind',\n  ISL: 'isl',\n  ITA: 'ita',\n  ITA_OLD: 'ita_old',\n  JAV: 'jav',\n  JPN: 'jpn',\n  KAN: 'kan',\n  KAT: 'kat',\n  KAT_OLD: 'kat_old',\n  KAZ: 'kaz',\n  KHM: 'khm',\n  KIR: 'kir',\n  KOR: 'kor',\n  KUR: 'kur',\n  LAO: 'lao',\n  LAT: 'lat',\n  LAV: 'lav',\n  LIT: 'lit',\n  MAL: 'mal',\n  MAR: 'mar',\n  MKD: 'mkd',\n  MLT: 'mlt',\n  MSA: 'msa',\n  MYA: 'mya',\n  NEP: 'nep',\n  NLD: 'nld',\n  NOR: 'nor',\n  ORI: 'ori',\n  PAN: 'pan',\n  POL: 'pol',\n  POR: 'por',\n  PUS: 'pus',\n  RON: 'ron',\n  RUS: 'rus',\n  SAN: 'san',\n  SIN: 'sin',\n  SLK: 'slk',\n  SLV: 'slv',\n  SPA: 'spa',\n  SPA_OLD: 'spa_old',\n  SQI: 'sqi',\n  SRP: 'srp',\n  SRP_LATN: 'srp_latn',\n  SWA: 'swa',\n  SWE: 'swe',\n  SYR: 'syr',\n  TAM: 'tam',\n  TEL: 'tel',\n  TGK: 'tgk',\n  TGL: 'tgl',\n  THA: 'tha',\n  TIR: 'tir',\n  TUR: 'tur',\n  UIG: 'uig',\n  UKR: 'ukr',\n  URD: 'urd',\n  UZB: 'uzb',\n  UZB_CYRL: 'uzb_cyrl',\n  VIE: 'vie',\n  YID: 'yid',\n};\n","const getId = require('./utils/getId');\n\nlet jobCounter = 0;\n\nmodule.exports = ({\n  id: _id,\n  action,\n  payload = {},\n}) => {\n  let id = _id;\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id,\n    action,\n    payload,\n  };\n};\n","const createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n","const resolvePaths = require('./utils/resolvePaths');\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\nconst OEM = require('./constants/OEM');\nconst {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  loadImage,\n  send,\n} = require('./worker/node');\n\nlet workerCounter = 0;\n\nmodule.exports = async (langs = 'eng', oem = OEM.LSTM_ONLY, _options = {}, config = {}) => {\n  const id = getId('Worker', workerCounter);\n  const {\n    logger,\n    errorHandler,\n    ...options\n  } = resolvePaths({\n    ...defaultOptions,\n    ..._options,\n  });\n  const promises = {};\n\n  // Current langs, oem, and config file.\n  // Used if the user ever re-initializes the worker using `worker.reinitialize`.\n  const currentLangs = typeof langs === 'string' ? langs.split('+') : langs;\n  let currentOem = oem;\n  let currentConfig = config;\n  const lstmOnlyCore = [OEM.DEFAULT, OEM.LSTM_ONLY].includes(oem) && !options.legacyCore;\n\n  let workerResReject;\n  let workerResResolve;\n  const workerRes = new Promise((resolve, reject) => {\n    workerResResolve = resolve;\n    workerResReject = reject;\n  });\n  const workerError = (event) => { workerResReject(event.message); };\n\n  let worker = spawnWorker(options);\n  worker.onerror = workerError;\n\n  workerCounter += 1;\n\n  const startJob = ({ id: jobId, action, payload }) => (\n    new Promise((resolve, reject) => {\n      log(`[${id}]: Start ${jobId}, action=${action}`);\n      // Using both `action` and `jobId` in case user provides non-unique `jobId`.\n      const promiseId = `${action}-${jobId}`;\n      promises[promiseId] = { resolve, reject };\n      send(worker, {\n        workerId: id,\n        jobId,\n        action,\n        payload,\n      });\n    })\n  );\n\n  const load = () => (\n    console.warn('`load` is depreciated and should be removed from code (workers now come pre-loaded)')\n  );\n\n  const loadInternal = (jobId) => (\n    startJob(createJob({\n      id: jobId, action: 'load', payload: { options: { lstmOnly: lstmOnlyCore, corePath: options.corePath, logging: options.logging } },\n    }))\n  );\n\n  const writeText = (path, text, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'writeFile', args: [path, text] },\n    }))\n  );\n\n  const readText = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\n    }))\n  );\n\n  const removeFile = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'unlink', args: [path] },\n    }))\n  );\n\n  const FS = (method, args, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method, args },\n    }))\n  );\n\n  const loadLanguageInternal = (_langs, jobId) => startJob(createJob({\n    id: jobId,\n    action: 'loadLanguage',\n    payload: {\n      langs: _langs,\n      options: {\n        langPath: options.langPath,\n        dataPath: options.dataPath,\n        cachePath: options.cachePath,\n        cacheMethod: options.cacheMethod,\n        gzip: options.gzip,\n        lstmOnly: [OEM.DEFAULT, OEM.LSTM_ONLY].includes(currentOem)\n          && !options.legacyLang,\n      },\n    },\n  }));\n\n  const initializeInternal = (_langs, _oem, _config, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: { langs: _langs, oem: _oem, config: _config },\n    }))\n  );\n\n  const reinitialize = (langs = 'eng', oem, config, jobId) => { // eslint-disable-line\n\n    if (lstmOnlyCore && [OEM.TESSERACT_ONLY, OEM.TESSERACT_LSTM_COMBINED].includes(oem)) throw Error('Legacy model requested but code missing.');\n\n    const _oem = oem || currentOem;\n    currentOem = _oem;\n\n    const _config = config || currentConfig;\n    currentConfig = _config;\n\n    // Only load langs that are not already loaded.\n    // This logic fails if the user downloaded the LSTM-only English data for a language\n    // and then uses `worker.reinitialize` to switch to the Legacy engine.\n    // However, the correct data will still be downloaded after initialization fails\n    // and this can be avoided entirely if the user loads the correct data ahead of time.\n    const langsArr = typeof langs === 'string' ? langs.split('+') : langs;\n    const _langs = langsArr.filter((x) => !currentLangs.includes(x));\n    currentLangs.push(..._langs);\n\n    if (_langs.length > 0) {\n      return loadLanguageInternal(_langs, jobId)\n        .then(() => initializeInternal(langs, _oem, _config, jobId));\n    }\n\n    return initializeInternal(langs, _oem, _config, jobId);\n  };\n\n  const setParameters = (params = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: { params },\n    }))\n  );\n\n  const recognize = async (image, opts = {}, output = {\n    text: true,\n  }, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'recognize',\n      payload: { image: await loadImage(image), options: opts, output },\n    }))\n  );\n\n  const detect = async (image, jobId) => {\n    if (lstmOnlyCore) throw Error('`worker.detect` requires Legacy model, which was not loaded.');\n\n    return startJob(createJob({\n      id: jobId,\n      action: 'detect',\n      payload: { image: await loadImage(image) },\n    }));\n  };\n\n  const terminate = async () => {\n    if (worker !== null) {\n      /*\n      await startJob(createJob({\n        id: jobId,\n        action: 'terminate',\n      }));\n      */\n      terminateWorker(worker);\n      worker = null;\n    }\n    return Promise.resolve();\n  };\n\n  onMessage(worker, ({\n    workerId, jobId, status, action, data,\n  }) => {\n    const promiseId = `${action}-${jobId}`;\n    if (status === 'resolve') {\n      log(`[${workerId}]: Complete ${jobId}`);\n      promises[promiseId].resolve({ jobId, data });\n      delete promises[promiseId];\n    } else if (status === 'reject') {\n      promises[promiseId].reject(data);\n      delete promises[promiseId];\n      if (action === 'load') workerResReject(data);\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger({ ...data, userJobId: jobId });\n    }\n  });\n\n  const resolveObj = {\n    id,\n    worker,\n    load,\n    writeText,\n    readText,\n    removeFile,\n    FS,\n    reinitialize,\n    setParameters,\n    recognize,\n    detect,\n    terminate,\n  };\n\n  loadInternal()\n    .then(() => loadLanguageInternal(langs))\n    .then(() => initializeInternal(langs, oem, config))\n    .then(() => workerResResolve(resolveObj))\n    .catch(() => {});\n\n  return workerRes;\n};\n","/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports = async (worker, packet) => {\n  worker.postMessage(packet);\n};\n","module.exports = (key) => {\n  const env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (typeof document === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n","/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3,\n};\n","module.exports = (prefix, cnt) => (\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\n);\n","let logging = false;\n\nexports.logging = logging;\n\nexports.setLogging = (_logging) => {\n  logging = _logging;\n};\n\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\n","/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nrequire('regenerator-runtime/runtime');\nconst createScheduler = require('./createScheduler');\nconst createWorker = require('./createWorker');\nconst Tesseract = require('./Tesseract');\nconst languages = require('./constants/languages');\nconst OEM = require('./constants/OEM');\nconst PSM = require('./constants/PSM');\nconst { setLogging } = require('./utils/log');\n\nmodule.exports = {\n  languages,\n  OEM,\n  PSM,\n  createScheduler,\n  createWorker,\n  setLogging,\n  ...Tesseract,\n};\n"],"names":["readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","_ref","target","error","code","Error","readAsArrayBuffer","loadImage","async","data","image","test","atob","split","map","c","charCodeAt","resp","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","module","exports","version","require","defaultOptions","workerPath","worker","handler","onmessage","spawnWorker","terminateWorker","onMessage","send","AgeVerificationApp","file","setFile","useState","imagePreview","setImagePreview","name","setName","age","setAge","loading","setLoading","setError","showPopup","setShowPopup","_jsxs","className","children","_jsx","join","type","onChange","event","selectedFile","files","startsWith","size","URL","createObjectURL","accept","alt","onClick","text","Tesseract","logger","m","console","log","dob","patterns","pattern","match","extractDOB","extractedName","lines","line","trim","filter","length","extractName","calculatedAge","parts","formattedDOB","parseInt","dobDate","Date","isNaN","getTime","today","getFullYear","monthDiff","getMonth","getDate","calculateAge","toast","position","success","warn","err","disabled","resolveURL","s","window","location","href","options","opts","forEach","key","createJob","getId","schedulerCounter","id","workers","runningWorkers","jobQueue","getNumWorkers","Object","keys","dequeue","wIds","i","queue","action","payload","job","push","shift","w","apply","this","addWorker","addJob","_len","arguments","Array","_key","terminate","wid","getQueueLen","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","RAW_LINE","workerBlobURL","Worker","AFR","AMH","ARA","ASM","AZE","AZE_CYRL","BEL","BEN","BOD","BOS","BUL","CAT","CEB","CES","CHI_SIM","CHI_TRA","CHR","CYM","DAN","DEU","DZO","ELL","ENG","ENM","EPO","EST","EUS","FAS","FIN","FRA","FRK","FRM","GLE","GLG","GRC","GUJ","HAT","HEB","HIN","HRV","HUN","IKU","IND","ISL","ITA","ITA_OLD","JAV","JPN","KAN","KAT","KAT_OLD","KAZ","KHM","KIR","KOR","KUR","LAO","LAT","LAV","LIT","MAL","MAR","MKD","MLT","MSA","MYA","NEP","NLD","NOR","ORI","PAN","POL","POR","PUS","RON","RUS","SAN","SIN","SLK","SLV","SPA","SPA_OLD","SQI","SRP","SRP_LATN","SWA","SWE","SYR","TAM","TEL","TGK","TGL","THA","TIR","TUR","UIG","UKR","URD","UZB","UZB_CYRL","VIE","YID","jobCounter","_id","createWorker","recognize","langs","finally","detect","resolvePaths","OEM","workerCounter","undefined","oem","LSTM_ONLY","_options","config","errorHandler","promises","currentLangs","currentOem","currentConfig","lstmOnlyCore","DEFAULT","includes","legacyCore","workerResReject","workerResResolve","workerRes","message","startJob","jobId","workerId","loadLanguageInternal","_langs","langPath","dataPath","cachePath","cacheMethod","gzip","lstmOnly","legacyLang","initializeInternal","_oem","_config","_ref2","status","promiseId","userJobId","resolveObj","load","writeText","path","method","args","readText","encoding","removeFile","FS","reinitialize","TESSERACT_ONLY","TESSERACT_LSTM_COMBINED","x","then","setParameters","params","output","corePath","logging","catch","packet","postMessage","env","WorkerGlobalScope","document","process","prefix","cnt","Math","random","toString","slice","setLogging","_logging","_this","createScheduler","languages","PSM"],"sourceRoot":""}