"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[795],{7795:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var n=a(4695),s=a.n(n),l=a(9246),o=a(5271),r=a(9950),i=a(4414);const c=function(){const[e,t]=(0,r.useState)([]),[a,n]=(0,r.useState)(""),[c,d]=(0,r.useState)([]),[h,u]=(0,r.useState)(!1),[f,p]=(0,r.useState)(""),m=(0,r.useRef)(null),x=async()=>{try{const e=await l.A.get("http://localhost:3001/files");d(e.data)}catch(e){console.error("Error fetching files:",e)}};(0,r.useEffect)((()=>{x()}),[]);const j=()=>{if(0===e.length)return[];const t=new Set;return e.forEach((e=>{Object.keys(e).forEach((e=>t.add(e)))})),Array.from(t)},v=j();return(0,i.jsxs)("div",{className:"excel-container",children:[!h&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("div",{className:"file-controls",children:[(0,i.jsx)("input",{type:"file",ref:m,onChange:e=>{const a=e.target.files[0];if(!a)return;n(a.name),p(a.name);const s=new FileReader;s.onload=e=>{const a=e.target.result,n=o.LF(a,{type:"binary"}),s=n.SheetNames[0],l=n.Sheets[s],r=o.Wp.sheet_to_json(l);t(r),u(!0)},s.readAsBinaryString(a)},id:"fileInput",className:"file-input"}),(0,i.jsx)("label",{htmlFor:"fileInput",className:"upload-button",children:"Choose File"})]}),(0,i.jsxs)("div",{className:"uploaded-files",children:[(0,i.jsx)("h3",{children:"Uploaded Files:"}),(0,i.jsx)("ul",{children:c.map((e=>(0,i.jsxs)("li",{children:[e.file_name,(0,i.jsx)("button",{onClick:()=>(async e=>{try{const a=await l.A.get(`http://localhost:3001/files/${e}`);n(a.data.file_name),p(a.data.file_name);const s=a.data.data,o=Array.from(new Set(s.flatMap((e=>Object.keys(e))))),r=s.map((e=>{const t={};return o.forEach((a=>{t[a]=e[a]||""})),t}));t(r),u(!0)}catch(a){console.error("Error viewing file:",a)}})(e.id),children:"View"}),(0,i.jsx)("button",{onClick:()=>(async e=>{try{(await s().fire({title:"Are you sure?",text:"You will not be able to recover this file!",icon:"warning",showCancelButton:!0,confirmButtonText:"Yes, delete it!",cancelButtonText:"No, keep it"})).isConfirmed&&(await l.A.delete(`http://localhost:3001/files/${e}`),s().fire("Deleted!","Your file has been deleted.","success"),x())}catch(t){console.error("Error deleting file:",t),s().fire("Error","Failed to delete file","error")}})(e.id),children:"Delete"})]},e.id)))})]})]}),h&&(0,i.jsx)("div",{className:"overlay",children:(0,i.jsxs)("div",{className:"overlay-content",children:[(0,i.jsxs)("div",{className:"overlay-buttons fixed-buttons",children:[(0,i.jsx)("button",{className:"close-overlay",onClick:()=>u(!1),children:"Close"}),(0,i.jsx)("button",{onClick:()=>{const t=o.Wp.json_to_sheet(e),n=o.Wp.book_new();o.Wp.book_append_sheet(n,t,"Sheet1"),o._h(n,a||"downloaded_data.xlsx")},children:"Download"}),(0,i.jsx)("button",{onClick:()=>{const a={};j().forEach((e=>a[e]="")),t([...e,a])},children:"Add Row"}),(0,i.jsx)("button",{onClick:()=>{const a=prompt("Enter Column Name");if(!a)return;const n=e.map((e=>({...e,[a]:""})));t(n)},children:"Add Column"}),(0,i.jsx)("button",{onClick:async()=>{try{const{value:t}=await s().fire({title:"Save File",text:`Do you want to save with the same file name (${f}) or a new file name?`,icon:"question",showCancelButton:!0,confirmButtonText:`Save as "${f}"`,cancelButtonText:"Save as new file"});let a=f;if(!t){const{value:e}=await s().fire({title:"Enter New File Name",input:"text",inputPlaceholder:"Enter file name...",showCancelButton:!0});if(!e)return void s().fire("Cancelled","Save operation was cancelled","info");a=e}n(a),await l.A.post("http://localhost:3001/uploadExcelData",{fileName:a,data:e}),s().fire("Success","Data saved to database","success"),x()}catch(t){console.error("Error saving data:",t),s().fire("Error","Failed to save data to database","error")}},children:"Save to DB"})]}),(0,i.jsx)("div",{className:"table-responsive",children:(0,i.jsxs)("table",{className:"excel-table",children:[(0,i.jsx)("thead",{children:(0,i.jsx)("tr",{children:v.map(((e,t)=>(0,i.jsx)("th",{children:e},t)))})}),(0,i.jsx)("tbody",{children:e.map(((a,n)=>(0,i.jsx)("tr",{children:v.map(((s,l)=>(0,i.jsx)("td",{children:(0,i.jsx)("input",{type:"text",value:a[s]||"",onChange:a=>((a,n,s)=>{const l=[...e];l[a][n]=s,t(l)})(n,s,a.target.value)})},l)))},n)))})]})})]})})]})}}}]);