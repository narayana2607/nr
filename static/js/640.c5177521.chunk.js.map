{"version":3,"file":"static/js/640.c5177521.chunk.js","mappings":"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","sources":["components/employee/Employee.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport * as XLSX from \"xlsx\";\r\nimport 'jspdf-autotable';\r\n\r\nimport Modal from \"react-modal\";\r\nimport \"./Employee.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst Employee = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [newEmployee, setNewEmployee] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    hire_date: \"\",\r\n    job_title: \"\",\r\n    department: \"\",\r\n  });\r\n  const [editEmployee, setEditEmployee] = useState(null);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [filters, setFilters] = useState({\r\n    hire_date: \"\",\r\n    job_title: \"\",\r\n    department: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\"http://localhost:3001/employees\");\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error);\r\n      alert(\"Error fetching employees\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    if (\r\n      !newEmployee.first_name ||\r\n      !newEmployee.last_name ||\r\n      !newEmployee.email ||\r\n      !newEmployee.hire_date ||\r\n      !newEmployee.job_title ||\r\n      !newEmployee.department\r\n    ) {\r\n      alert(\"Please fill in all required fields.\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addOrEditEmployee = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      for (const key in newEmployee) {\r\n        if (key === \"hire_date\" && newEmployee[key]) {\r\n          formData.append(key, newEmployee[key].split(\"T\")[0]);\r\n        } else {\r\n          formData.append(key, newEmployee[key]);\r\n        }\r\n      }\r\n      if (profilePic) {\r\n        formData.append(\"profile_pic\", profilePic);\r\n      }\r\n\r\n      if (editEmployee) {\r\n        await axios.put(\r\n          `http://localhost:3001/employees/${editEmployee.id}`,\r\n          formData,\r\n          { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n        );\r\n        alert(\"Employee updated successfully\");\r\n      } else {\r\n        await axios.post(\"http://localhost:3001/employees\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n        alert(\"Employee added successfully\");\r\n      }\r\n\r\n      fetchEmployees();\r\n      resetForm();\r\n      setIsModalOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error adding/editing employee:\", error);\r\n      alert(\r\n        `Error: ${error.response?.data?.error || \"Error processing request\"}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteEmployee = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this employee?\")) {\r\n      return;\r\n    }\r\n    try {\r\n      await axios.delete(`http://localhost:3001/employees/${id}`);\r\n      alert(\"Employee deleted successfully\");\r\n      fetchEmployees();\r\n    } catch (error) {\r\n      console.error(\"Error deleting employee:\", error);\r\n      alert(\"Error deleting employee\");\r\n    }\r\n  };\r\n\r\n  const handleProfilePicChange = (e) => {\r\n    setProfilePic(e.target.files[0]);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewEmployee({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      phone_number: \"\",\r\n      hire_date: \"\",\r\n      job_title: \"\",\r\n      department: \"\",\r\n    });\r\n    setProfilePic(null);\r\n    setEditEmployee(null);\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Employee Details\", 10, 10);\r\n    let y = 20;\r\n    employees.forEach((employee) => {\r\n      doc.text(\r\n        `Name: ${employee.first_name} ${employee.last_name}\\nEmail: ${employee.email}\\nPhone: ${employee.phone_number}\\nJob: ${employee.job_title}\\nDepartment: ${employee.department}`,\r\n        10,\r\n        y\r\n      );\r\n      y += 40;\r\n    });\r\n    doc.save(\"employees.pdf\");\r\n  };\r\n\r\n  const downloadExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(\r\n      employees.map((employee) => ({\r\n        Name: `${employee.first_name} ${employee.last_name}`,\r\n        Email: employee.email,\r\n        Phone: employee.phone_number,\r\n        \"Hire Date\": employee.hire_date,\r\n        Job: employee.job_title,\r\n        Department: employee.department,\r\n      }))\r\n    );\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Employees\");\r\n    XLSX.writeFile(workbook, \"employees.xlsx\"); \r\n  };\r\n\r\n\r\n\r\n  // payslip\r\n  \r\n  const generatePayslip = async (employee) => {\r\n    const doc = new jsPDF();\r\n  \r\n    // Add Header\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(18);\r\n    doc.text(\"Pay Stub\", 10, 20);\r\n  \r\n    doc.setFontSize(12);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(\"NNR Pvt Ltd\", 150, 20, { align: \"right\" });\r\n  \r\n    // Add Profile Picture\r\n    const imgWidth = 40;\r\n    const imgHeight = 40;\r\n    const imgX = 150;\r\n    const imgY = 30;\r\n  \r\n    try {\r\n      const profilePicUrl = `http://localhost:3000${employee.profile_pic}`;\r\n      const imageResponse = await fetch(profilePicUrl);\r\n      if (!imageResponse.ok) {\r\n        throw new Error(\"Profile picture not found\");\r\n      }\r\n      const imageBlob = await imageResponse.blob();\r\n      const reader = new FileReader();\r\n  \r\n      reader.onload = () => {\r\n        const base64data = reader.result;\r\n        doc.addImage(base64data, \"JPEG\", imgX, imgY, imgWidth, imgHeight);\r\n  \r\n        // Continue generating the rest of the payslip\r\n        generatePayslipContent(doc, employee);\r\n      };\r\n  \r\n      reader.readAsDataURL(imageBlob);\r\n    } catch (error) {\r\n      console.error(\"Error loading profile picture:\", error);\r\n          console.error(\"Error adding profile picture:\", error);\r\n\r\n  \r\n      // Generate payslip without profile picture\r\n      generatePayslipContent(doc, employee);\r\n    }\r\n  };\r\n  \r\n  const generatePayslipContent = (doc, employee) => {\r\n    // Employee Details\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Employee Name:`, 10, 40);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`${employee.first_name} ${employee.last_name}`, 50, 40);\r\n  \r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Employee ID:`, 10, 50);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`${employee.id}`, 50, 50);\r\n  \r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Pay Period:`, 10, 60);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`01/01/2025 - 31/01/2025`, 50, 60);\r\n  \r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Pay Date:`, 10, 70);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`05/02/2025`, 50, 70);\r\n  \r\n    // Earnings Table\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Earnings\", 10, 90);\r\n  \r\n    const earnings = [\r\n      [\"Description\", \"Hours Worked\", \"Rate\", \"Amount\"],\r\n      [\"Regular Pay\", \"160\", \"₹500\", \"₹80,000\"],\r\n      [\"Overtime Pay\", \"10\", \"₹750\", \"₹7,500\"],\r\n      [\"Bonus\", \"-\", \"-\", \"₹5,000\"],\r\n    ];\r\n  \r\n    doc.autoTable({\r\n      head: [earnings[0]],\r\n      body: earnings.slice(1),\r\n      startY: 95,\r\n      theme: \"grid\",\r\n      styles: { fontSize: 10 },\r\n      headStyles: { fillColor: [0, 128, 128] },\r\n    });\r\n  \r\n    // Total Earnings\r\n    const totalEarningsY = doc.lastAutoTable.finalY + 10;\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Total Earnings: ₹92,500`, 10, totalEarningsY);\r\n  \r\n    // Deductions Table\r\n    const deductionsY = totalEarningsY + 10;\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Deductions\", 10, deductionsY);\r\n  \r\n    const deductions = [\r\n      [\"Description\", \"Amount\"],\r\n      [\"Federal Tax\", \"₹10,000\"],\r\n      [\"State Tax\", \"₹2,500\"],\r\n      [\"Social Security\", \"₹5,000\"],\r\n      [\"Medicare\", \"₹1,500\"],\r\n      [\"Health Insurance\", \"₹2,000\"],\r\n      [\"Retirement Contribution\", \"₹3,000\"],\r\n    ];\r\n  \r\n    doc.autoTable({\r\n      head: [deductions[0]],\r\n      body: deductions.slice(1),\r\n      startY: deductionsY + 5,\r\n      theme: \"grid\",\r\n      styles: { fontSize: 10 },\r\n      headStyles: { fillColor: [0, 128, 128] },\r\n    });\r\n  \r\n    // Total Deductions and Net Pay\r\n    const totalDeductionsY = doc.lastAutoTable.finalY + 10;\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(`Total Deductions: ₹24,000`, 10, totalDeductionsY);\r\n  \r\n    const netPayY = totalDeductionsY + 10;\r\n    doc.text(`Net Pay (Take Home): ₹68,500`, 10, netPayY);\r\n  \r\n    // Footer\r\n    const footerY = netPayY + 20;\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setFontSize(10);\r\n    doc.text(\r\n      \"This is a system-generated payslip. For any discrepancies, contact HR.\",\r\n      10,\r\n      footerY\r\n    );\r\n    \r\n  \r\n    // Save PDF\r\n    doc.save(`Payslip_${employee.first_name}_${employee.last_name}.pdf`);\r\n  };\r\n  \r\n\r\n  const filteredEmployees = employees\r\n    .filter((employee) =>\r\n      (employee.first_name?.toLowerCase() || \"\").includes(\r\n        searchTerm.toLowerCase()\r\n      ) ||\r\n      (employee.last_name?.toLowerCase() || \"\").includes(\r\n        searchTerm.toLowerCase()\r\n      ) ||\r\n      (employee.email?.toLowerCase() || \"\").includes(searchTerm.toLowerCase())\r\n    )\r\n    .filter(\r\n      (employee) =>\r\n        (!filters.job_title || employee.job_title === filters.job_title) &&\r\n        (!filters.department || employee.department === filters.department)\r\n    );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"emp\">\r\n        <p>Employee Info Management</p>\r\n      </div>\r\n\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by name or email...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filters\">\r\n        <input\r\n          type=\"date\"\r\n          name=\"hire_date\"\r\n          value={filters.hire_date}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Filter by hire date\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"job_title\"\r\n          value={filters.job_title}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Filter by role\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"department\"\r\n          value={filters.department}\r\n          onChange={handleFilterChange}\r\n          placeholder=\"Filter by department\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn primary\" onClick={() => setIsModalOpen(true)}>\r\n        Add Employee\r\n      </button>\r\n      <button className=\"btn secondary\" onClick={downloadPDF}>\r\n        Download PDF\r\n      </button>\r\n      <button className=\"btn secondary\" onClick={downloadExcel}>\r\n        Download Excel\r\n      </button>\r\n\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        contentLabel=\"Add/Edit Employee\"\r\n        className=\"Modal\"\r\n        overlayClassName=\"Overlay\"\r\n      >\r\n        <h2>{editEmployee ? \"Edit Employee\" : \"Add New Employee\"}</h2>\r\n        <div className=\"employee-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"First Name\"\r\n            value={newEmployee.first_name}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, first_name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Last Name\"\r\n            value={newEmployee.last_name}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, last_name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={newEmployee.email}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, email: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Phone Number\"\r\n            value={newEmployee.phone_number}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, phone_number: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Hire Date\"\r\n            value={newEmployee.hire_date}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, hire_date: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Job Title\"\r\n            value={newEmployee.job_title}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, job_title: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Department\"\r\n            value={newEmployee.department}\r\n            onChange={(e) =>\r\n              setNewEmployee({ ...newEmployee, department: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={handleProfilePicChange}\r\n          />\r\n          <button className=\"btn primary\" onClick={addOrEditEmployee}>\r\n            {editEmployee ? \"Save Changes\" : \"Add Employee\"}\r\n          </button>\r\n          <button\r\n            className=\"btn secondary\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"employee-list\">\r\n          {filteredEmployees.map((employee) => (\r\n            <div key={employee.id} className=\"employee-card\">\r\n              {employee.profile_pic ? (\r\n                <img\r\n                  src={`http://localhost:3001${employee.profile_pic}`}\r\n                  alt=\"Profile\"\r\n                  className=\"profile-pic\"\r\n                />\r\n              ) : (\r\n                <div className=\"default-profile\">No Image</div>\r\n              )}\r\n              <p>\r\n                <strong>Name:</strong> {employee.first_name} {employee.last_name}\r\n              </p>\r\n              <p>\r\n                <strong>Email:</strong> {employee.email}\r\n              </p>\r\n              <p>\r\n                <strong>Phone:</strong> {employee.phone_number}\r\n              </p>\r\n              <p>\r\n                <strong>Hire Date:</strong> {employee.hire_date}\r\n              </p>\r\n              <p>\r\n                <strong>Job:</strong> {employee.job_title}\r\n              </p>\r\n              <p>\r\n                <strong>Department:</strong> {employee.department}\r\n              </p>\r\n              <div className=\"button-group\">\r\n                <button\r\n                  className=\"btn secondary\"\r\n                  onClick={() => {\r\n                    setNewEmployee(employee);\r\n                    setEditEmployee(employee);\r\n                    setIsModalOpen(true);\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"btn danger\"\r\n                  onClick={() => deleteEmployee(employee.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                <button\r\n                  className=\"btn secondary\"\r\n                  onClick={() => generatePayslip(employee)}\r\n                >\r\n                   Payslip\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Employee;\r\n"],"names":["Modal","Employee","employees","setEmployees","useState","searchTerm","setSearchTerm","newEmployee","setNewEmployee","first_name","last_name","email","phone_number","hire_date","job_title","department","editEmployee","setEditEmployee","profilePic","setProfilePic","isModalOpen","setIsModalOpen","filters","setFilters","loading","setLoading","useEffect","fetchEmployees","async","response","axios","get","data","error","console","alert","resetForm","handleFilterChange","e","target","name","value","generatePayslipContent","doc","employee","setFont","text","id","earnings","autoTable","head","body","slice","startY","theme","styles","fontSize","headStyles","fillColor","totalEarningsY","lastAutoTable","finalY","deductionsY","deductions","totalDeductionsY","netPayY","footerY","setFontSize","save","filteredEmployees","filter","_employee$first_name","_employee$last_name","_employee$email","toLowerCase","includes","_jsxs","className","children","_jsx","type","placeholder","onChange","onClick","downloadPDF","jsPDF","y","forEach","downloadExcel","worksheet","XLSX","json_to_sheet","map","Name","Email","Phone","Job","Department","workbook","book_new","book_append_sheet","isOpen","onRequestClose","contentLabel","overlayClassName","accept","files","formData","FormData","key","append","split","put","headers","post","_error$response","_error$response$data","profile_pic","src","alt","window","confirm","delete","deleteEmployee","align","profilePicUrl","imageResponse","fetch","ok","Error","imageBlob","blob","reader","FileReader","onload","base64data","result","addImage","readAsDataURL","generatePayslip"],"sourceRoot":""}