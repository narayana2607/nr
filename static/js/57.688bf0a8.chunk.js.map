{"version":3,"file":"static/js/57.688bf0a8.chunk.js","mappings":"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","sources":["components/Food/FoodHome.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './FoodHome.css';\r\nimport foodmain1 from '../images/foodmain1.jpg';\r\n\r\nconst FoodHome = () => {\r\n  const [items] = useState([\r\n    { category: 'Appetizers', title: 'Bruschetta', description: 'Grilled bread topped with fresh tomatoes, basil, and olive oil.', price: 7.99, image: 'https://images.unsplash.com/photo-1580476262700-c45559492895?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Mozzarella Sticks', description: 'Crispy fried mozzarella served with marinara sauce.', price: 8.49, image: 'https://plus.unsplash.com/premium_photo-1664647352697-b08e7552594a?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Stuffed Mushrooms', description: 'Mushroom caps stuffed with a savory cheese and herb filling.', price: 9.99, image: 'https://images.unsplash.com/photo-1621996346565-e3dbc646d9a9?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Spinach Artichoke Dip', description: 'Creamy dip served with warm tortilla chips.', price: 8.99, image: 'https://images.unsplash.com/photo-1627845231704-54f558b21b75?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Garlic Parmesan Wings', description: 'Oven-baked wings tossed in garlic parmesan sauce.', price: 10.99, image: 'https://images.unsplash.com/photo-1621996346565-e3dbc646d9a9?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Loaded Nachos', description: 'Tortilla chips topped with cheese, jalape√±os, sour cream, and guacamole.', price: 11.49, image: 'https://images.unsplash.com/photo-1571127455795-94fd49865a1a?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Shrimp Cocktail', description: 'Chilled shrimp served with zesty cocktail sauce.', price: 12.49, image: 'https://images.unsplash.com/photo-1614777774511-789989745564?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Caprese Salad', description: 'Fresh mozzarella, tomatoes, and basil with balsamic glaze.', price: 8.99, image: 'https://images.unsplash.com/photo-1574484284464-a75177462e67?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Mini Crab Cakes', description: 'Golden brown crab cakes with remoulade sauce.', price: 12.99, image: 'https://images.unsplash.com/photo-1628157411678-712964727497?q=80&w=2073&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fA%3D%3D' },\r\n    { category: 'Appetizers', title: 'Deviled Eggs', description: 'Classic deviled eggs with a hint of paprika.', price: 7.49, image: 'https://images.unsplash.com/photo-1614777774511-789989745564?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n\r\n    { category: 'Main Courses', title: 'Margherita Pizza', description: 'Classic pizza with tomato, mozzarella, and fresh basil.', price: 12.99, image: 'https://images.unsplash.com/photo-1513104890138-7c749659a591?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' },\r\n    { category: 'Desserts', title: 'Chocolate Lava Cake', description: 'Warm chocolate cake with a molten center.', price: 7.99, image: 'https://images.unsplash.com/photo-1495147466023-ac5c588e2e94?q=80&w=2073&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' }\r\n  ]);\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const [cart, setCart] = useState([]);\r\n  const [isCartOpen, setIsCartOpen] = useState(false);\r\n  const [orderSuccess, setOrderSuccess] = useState(false);\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  const [cartWarning, setCartWarning] = useState('');\r\n  const [showAddNotification, setShowAddNotification] = useState(false);\r\n  const [addedItem, setAddedItem] = useState(null);\r\n  const cartModalRef = useRef(null);\r\n  const addNotificationTimeout = useRef(null);\r\n\r\n  // Search functionality\r\n   // Search functionality\r\n   useEffect(() => {\r\n    setFilteredItems(\r\n      items.filter(item =>\r\n        item.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n      )\r\n    );\r\n  }, [searchQuery, items]);\r\n\r\n  // Add item to cart with notification\r\n  const addToCart = (item) => {\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((cartItem) => cartItem.title === item.title);\r\n      if (existingItem) {\r\n        return prevCart.map((cartItem) =>\r\n          cartItem.title === item.title ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\r\n        );\r\n      }\r\n      return [...prevCart, { ...item, quantity: 1 }];\r\n    });\r\n    \r\n    setAddedItem(item);\r\n    setShowAddNotification(true);\r\n    setCartWarning('');\r\n    \r\n    if (addNotificationTimeout.current) {\r\n      clearTimeout(addNotificationTimeout.current);\r\n    }\r\n    \r\n    addNotificationTimeout.current = setTimeout(() => {\r\n      setShowAddNotification(false);\r\n    }, 2000);\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (item) => {\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((cartItem) => cartItem.title === item.title);\r\n      if (existingItem && existingItem.quantity > 1) {\r\n        return prevCart.map((cartItem) =>\r\n          cartItem.title === item.title ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\r\n        );\r\n      } else {\r\n        return prevCart.filter((cartItem) => cartItem.title !== item.title);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Confirm order\r\n  const confirmOrder = () => {\r\n    if (cart.length > 0 && paymentMethod) {\r\n      setOrderSuccess(true);\r\n      setCart([]);\r\n      setPaymentMethod('');\r\n      setTimeout(() => setOrderSuccess(false), 3000);\r\n      setIsCartOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27 && isCartOpen) {\r\n        setIsCartOpen(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n      if (addNotificationTimeout.current) {\r\n        clearTimeout(addNotificationTimeout.current);\r\n      }\r\n    };\r\n  }, [isCartOpen]);\r\n\r\n  // Calculate total\r\n  const calculateTotal = () => {\r\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\r\n  };\r\n\r\n  const handleViewCart = () => {\r\n    if (cart.length === 0) {\r\n      setCartWarning('Please add items to your cart before viewing it.');\r\n    } else {\r\n      setIsCartOpen(true);\r\n      setCartWarning('');\r\n    }\r\n  };\r\n\r\n  // Render cart modal\r\n  const renderCart = () => (\r\n    <div className={`cart-modal ${isCartOpen ? 'open' : ''}`} ref={cartModalRef}>\r\n      <div className=\"cart-modal-content\">\r\n        <h3>Your Order</h3>\r\n        {cart.length > 0 ? (\r\n          <>\r\n            <div className=\"cart-items\">\r\n              {cart.map((item, index) => (\r\n                <div key={index} className=\"cart-item\">\r\n                  <div className=\"cart-item-info\">\r\n                    <img src={item.image} alt={item.title} className=\"cart-item-image\" />\r\n                    <div>\r\n                      <span className=\"cart-item-title\">\r\n                        {item.title} (x{item.quantity})\r\n                      </span>\r\n                      <span>${(item.price * item.quantity).toFixed(2)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"cart-item-quantity-controls\">\r\n                    <button\r\n                      className=\"quantity-button\"\r\n                      onClick={() => removeFromCart(item)}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <span className=\"item-quantity\">{item.quantity}</span>\r\n                    <button\r\n                      className=\"quantity-button\"\r\n                      onClick={() => addToCart(item)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <button className=\"remove-button\" onClick={() => removeFromCart(item)}>\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"cart-total\">\r\n              <strong>Total:</strong> <span>${calculateTotal()}</span>\r\n            </div>\r\n            <div className=\"payment-options\">\r\n              <strong>Payment Method:</strong>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  value=\"cash\"\r\n                  checked={paymentMethod === 'cash'}\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                />\r\n                Cash\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  value=\"card\"\r\n                  checked={paymentMethod === 'card'}\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                />\r\n                Card\r\n              </label>\r\n              {!paymentMethod && <p className=\"payment-warning\">Please select a payment method.</p>}\r\n            </div>\r\n            <div className=\"cart-buttons\">\r\n              <button\r\n                className=\"confirm-order-button\"\r\n                onClick={confirmOrder}\r\n                disabled={!paymentMethod}\r\n              >\r\n                Confirm Order\r\n              </button>\r\n              <button className=\"close-cart-button\" onClick={() => setIsCartOpen(false)}>\r\n                Continue Shopping\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>Your cart is empty.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"bar-home-container\">\r\n      <div className=\"bar-hero-section\" style={{ backgroundImage: `url(${foodmain1})` }}>\r\n        <h1 className=\"bar-hero-text\">Welcome to NNR BAR & RESTAURANT</h1>\r\n        <p className=\"bar-hero-subtext\">Delicious food, cozy ambiance</p>\r\n      </div>\r\n\r\n      <section id=\"menu-section\" className=\"bar-menu-items-section\">\r\n        <h2>Menu</h2>\r\n        <div className=\"bar-menu-controls\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"bar-search-input\"\r\n            placeholder=\"Search for an item...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n          />\r\n          <button className=\"view-cart-button\" onClick={handleViewCart}>\r\n            View Cart ({cart.length})\r\n          </button>\r\n        </div>\r\n        {cartWarning && <p className=\"cart-warning\">{cartWarning}</p>}\r\n        <div className=\"bar-menu-items\">\r\n          {filteredItems.map((item, index) => (\r\n            <div key={index} className=\"bar-menu-item\">\r\n              <div className=\"bar-menu-item-image-container\">\r\n                <img src={item.image} alt={item.title} className=\"bar-menu-item-image\" />\r\n              </div>\r\n              <h4>{item.title}</h4>\r\n              <p>{item.description}</p>\r\n              <p>\r\n                <strong>${item.price.toFixed(2)}</strong>\r\n              </p>\r\n              <button className=\"bar-order-button\" onClick={() => addToCart(item)}>\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Add to Cart Notification */}\r\n      {showAddNotification && (\r\n        <div className=\"add-to-cart-notification\">\r\n          <span className=\"notification-text\">\r\n            Added {addedItem?.title} to cart!\r\n          </span>\r\n          <button \r\n            className=\"view-cart-now-button\"\r\n            onClick={() => {\r\n              setIsCartOpen(true);\r\n              setShowAddNotification(false);\r\n            }}\r\n          >\r\n            View Cart\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isCartOpen && renderCart()}\r\n\r\n      {orderSuccess && <div className=\"order-success-notification\">Order placed successfully!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodHome;"],"names":["FoodHome","items","useState","category","title","description","price","image","searchQuery","setSearchQuery","filteredItems","setFilteredItems","cart","setCart","isCartOpen","setIsCartOpen","orderSuccess","setOrderSuccess","paymentMethod","setPaymentMethod","cartWarning","setCartWarning","showAddNotification","setShowAddNotification","addedItem","setAddedItem","cartModalRef","useRef","addNotificationTimeout","useEffect","filter","item","toLowerCase","includes","addToCart","prevCart","find","cartItem","map","quantity","current","clearTimeout","setTimeout","removeFromCart","existingItem","confirmOrder","length","handleEsc","event","keyCode","window","addEventListener","removeEventListener","_jsxs","className","children","style","backgroundImage","foodmain1","_jsx","id","type","placeholder","value","onChange","e","target","onClick","handleViewCart","index","src","alt","toFixed","ref","_Fragment","reduce","total","name","checked","disabled"],"sourceRoot":""}